{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Placeholder linear-gradient(170deg, #795649, #795649, #46413f calc(50% - 1px), white 50%)","title":"Home"},{"location":"downloads/","text":"Info Remember that MoH Reborn patch currently supports only MoH:AA 1.11 version! Linux \u00b6 MoH:AA Reborn RC3.5.1 for Linux Windows \u00b6 MoH:AA Reborn RC3.5.1 for Windows Compatible binaries \u00b6 MoH:AA 1.11 Reborn Compatible Binaries Bundle","title":"Downloads"},{"location":"downloads/#linux","text":"MoH:AA Reborn RC3.5.1 for Linux","title":"Linux"},{"location":"downloads/#windows","text":"MoH:AA Reborn RC3.5.1 for Windows","title":"Windows"},{"location":"downloads/#compatible-binaries","text":"MoH:AA 1.11 Reborn Compatible Binaries Bundle","title":"Compatible binaries"},{"location":"history-and-credits/","text":"History \u00b6 This project was started as xNULL project some time ago as the follower of MoH:AA Reloaded project. Due to lack of support and time, developers had to drop it, but now it's Reborn with new power and enthusiasm. We gave it a new name, but we use old hosting site and some of the old sources from both previous projects. Thats why we have a lot of people, from earlier projects and current one, who deserve to be mentioned as they have put a lot of work and effort to create some decent patch. It doesn't matter if they have succeeded or failed, because as we said few lines above - we are using some of theirs work. The MoH:AA 1.12 Reborn Project right now is too young and fresh to say who deserves to be mentioned in the credits. However, there are some people who have already done so many for the game and in some way for this patch, so we decided to mention them here. First of all we all should thank James who saved old xNULL project from rotting and collapsing and brought the idea of restarting it as a final try in MoH:AA fixing. He made a lot of fixes for the game, did a lot of game engine reversing, invented a lot of original ways for fighting with cheaters The rest won't be in any special order or something, because that doesn't really matter. Credits \u00b6 First of all we all should thank James who saved old xNULL project from rotting and collapsing and brought the idea of restarting it as a final try in MoH:AA fixing. During many years, he made a lot of fixes for the game, did a lot of game engine reversing, invented a lot of original ways of hacking the engine or for fighting with cheaters. Core maintainers \u00b6 James - project founder, community manager, administrator, developer with strong focus on security and anti-cheat measures Razo[R]apiD - research, huge amount of time spent on debugging and writing the actual patch own3mall - infrastructure administrator and developer of several widely used tools / services Shadow - community manager, administrator and author of many tutorials and guide books. He also preserves MoH:AA legacy by maintaining list of custom maps and mods created by community over the years. Core developers, modders and community contributors \u00b6 RyBack - for reversing huge amounts of game engine, one of maintainers and main developers of OpenMoHAA project, creator of AlphaMac anti-cheat Ley0k / ldvc - for reversing huge amounts of game engine, one of maintainers and main developers of OpenMoHAA and MoH:UE projects Sor DoubleKill Appelpitje PurpleElephant Armageddon Heatsinkbod Smithy Zappa Todesengel Criminal / Crimewavez Dax Bulldozer and many more... Hall of Fame \u00b6 Here are listed crucial contributors that are not active anymore. The list is not in any particular order. Developers \u00b6 JoTo - a lot of help with testing, ideas, code fixes, has been with the project from the beginning, for his 3rd party tools, support and more wombat - for creating 1st version of gamex and cgamex wrapper, reversing game engine, fixes elgan - for his admin pro, many game fixes, updated gamex wrapper, Admin&Banning System heiko - for 1st linux version of gamex wrapper, reversing game engine, first version of AntiWH code/concept rookie_one - for game fixes, OpenMOHAA project vuurvlieg - for reversing game engine, development of prev xNULL patch electrickrypt - for reversing game engine, development of prev xNULL patch klownterfit - for reversing game engine, development of prev xNULL patch macpunk - for reversing game engine, development of prev xNULL patch jv_map - for great amount of game mods, game fixes, game addons okidoki - for huge amount of work on reversing game engine, a lot of help and knowledge about MoH:AA game, for sharing with his source code and for his cgamex base hummingbird - for helping with the patch code, sharing source code etc. Miscellaneous \u00b6 Creaper - for sharing with his dedicated box, without it we couldn't progress with the patch and be where we are now","title":"History & Credits"},{"location":"history-and-credits/#history","text":"This project was started as xNULL project some time ago as the follower of MoH:AA Reloaded project. Due to lack of support and time, developers had to drop it, but now it's Reborn with new power and enthusiasm. We gave it a new name, but we use old hosting site and some of the old sources from both previous projects. Thats why we have a lot of people, from earlier projects and current one, who deserve to be mentioned as they have put a lot of work and effort to create some decent patch. It doesn't matter if they have succeeded or failed, because as we said few lines above - we are using some of theirs work. The MoH:AA 1.12 Reborn Project right now is too young and fresh to say who deserves to be mentioned in the credits. However, there are some people who have already done so many for the game and in some way for this patch, so we decided to mention them here. First of all we all should thank James who saved old xNULL project from rotting and collapsing and brought the idea of restarting it as a final try in MoH:AA fixing. He made a lot of fixes for the game, did a lot of game engine reversing, invented a lot of original ways for fighting with cheaters The rest won't be in any special order or something, because that doesn't really matter.","title":"History"},{"location":"history-and-credits/#credits","text":"First of all we all should thank James who saved old xNULL project from rotting and collapsing and brought the idea of restarting it as a final try in MoH:AA fixing. During many years, he made a lot of fixes for the game, did a lot of game engine reversing, invented a lot of original ways of hacking the engine or for fighting with cheaters.","title":"Credits"},{"location":"history-and-credits/#core-maintainers","text":"James - project founder, community manager, administrator, developer with strong focus on security and anti-cheat measures Razo[R]apiD - research, huge amount of time spent on debugging and writing the actual patch own3mall - infrastructure administrator and developer of several widely used tools / services Shadow - community manager, administrator and author of many tutorials and guide books. He also preserves MoH:AA legacy by maintaining list of custom maps and mods created by community over the years.","title":"Core maintainers"},{"location":"history-and-credits/#core-developers-modders-and-community-contributors","text":"RyBack - for reversing huge amounts of game engine, one of maintainers and main developers of OpenMoHAA project, creator of AlphaMac anti-cheat Ley0k / ldvc - for reversing huge amounts of game engine, one of maintainers and main developers of OpenMoHAA and MoH:UE projects Sor DoubleKill Appelpitje PurpleElephant Armageddon Heatsinkbod Smithy Zappa Todesengel Criminal / Crimewavez Dax Bulldozer and many more...","title":"Core developers, modders and community contributors"},{"location":"history-and-credits/#hall-of-fame","text":"Here are listed crucial contributors that are not active anymore. The list is not in any particular order.","title":"Hall of Fame"},{"location":"history-and-credits/#developers","text":"JoTo - a lot of help with testing, ideas, code fixes, has been with the project from the beginning, for his 3rd party tools, support and more wombat - for creating 1st version of gamex and cgamex wrapper, reversing game engine, fixes elgan - for his admin pro, many game fixes, updated gamex wrapper, Admin&Banning System heiko - for 1st linux version of gamex wrapper, reversing game engine, first version of AntiWH code/concept rookie_one - for game fixes, OpenMOHAA project vuurvlieg - for reversing game engine, development of prev xNULL patch electrickrypt - for reversing game engine, development of prev xNULL patch klownterfit - for reversing game engine, development of prev xNULL patch macpunk - for reversing game engine, development of prev xNULL patch jv_map - for great amount of game mods, game fixes, game addons okidoki - for huge amount of work on reversing game engine, a lot of help and knowledge about MoH:AA game, for sharing with his source code and for his cgamex base hummingbird - for helping with the patch code, sharing source code etc.","title":"Developers"},{"location":"history-and-credits/#miscellaneous","text":"Creaper - for sharing with his dedicated box, without it we couldn't progress with the patch and be where we are now","title":"Miscellaneous"},{"location":"welcome/","text":"Welcome \u00b6 The MoH Reborn Project has been initiated to revitalize the Medal of Honor: Allied Assault game. Its corner stone is an unofficial patch, created by the xNULL community, that has been in active development for over 10 years. We also develop solutions for MoH:SH/BT/PA, and we continuously try to extend our efforts into supporting those titles as well. This website serves as documentation for MoH:AA Reborn 1.12 Patch and all other solutions we have built during all those years (for example GameSpy's masterserver replacement). We hope that users, which are both server admins and players, will find it useful. You may be interested in: Fix in-game browser and play online Host MoH server with Reborn 1.12 patch or the rest of resources we prepared for you. xNULL Community \u00b6 xNULL is a community of gamers, modders, server admins, artists, developers and other enthusiasts who are mainly centered around Medal of Honor gaming franchise, but we don't limit ourselves in this regard. If you have any questions, problems or simply want to talk with us about anything MoH/modding/technology related, you can find us here: xNULL Forum xNULL Discord You can also find many members of our community in other places, like: MoH Rises - MoH:Unreal Engine Project OpenMoHAA MoH Amalgamated Allied Assault Alliance r/MOHAA If you want to host your own MoH:AA/SH/BT server without a hassle, you may want to consider using game hosting services provided by one of our core maintainers - own3mall : WeBeHostiN Contributing \u00b6 If you would like to contribute to this documentation, you can do this on several levels: by creating a GitHub issue, describing what in your opinion needs changing by directly forking the source code of this documentation, making needed changes and sending us pull request, which will be then discussed and eventually incorporated The link to the documentation repository is located in the upper-right corner of this website. Keep in mind, that it's usually better to open new issue to start a discussion before implementing changes that may or may not find their way into next release, in order to avoid unnecessary work. Please read Contributor's Guide on GitHub repository for more detailed information.","title":"Welcome"},{"location":"welcome/#welcome","text":"The MoH Reborn Project has been initiated to revitalize the Medal of Honor: Allied Assault game. Its corner stone is an unofficial patch, created by the xNULL community, that has been in active development for over 10 years. We also develop solutions for MoH:SH/BT/PA, and we continuously try to extend our efforts into supporting those titles as well. This website serves as documentation for MoH:AA Reborn 1.12 Patch and all other solutions we have built during all those years (for example GameSpy's masterserver replacement). We hope that users, which are both server admins and players, will find it useful. You may be interested in: Fix in-game browser and play online Host MoH server with Reborn 1.12 patch or the rest of resources we prepared for you.","title":"Welcome"},{"location":"welcome/#xnull-community","text":"xNULL is a community of gamers, modders, server admins, artists, developers and other enthusiasts who are mainly centered around Medal of Honor gaming franchise, but we don't limit ourselves in this regard. If you have any questions, problems or simply want to talk with us about anything MoH/modding/technology related, you can find us here: xNULL Forum xNULL Discord You can also find many members of our community in other places, like: MoH Rises - MoH:Unreal Engine Project OpenMoHAA MoH Amalgamated Allied Assault Alliance r/MOHAA If you want to host your own MoH:AA/SH/BT server without a hassle, you may want to consider using game hosting services provided by one of our core maintainers - own3mall : WeBeHostiN","title":"xNULL Community"},{"location":"welcome/#contributing","text":"If you would like to contribute to this documentation, you can do this on several levels: by creating a GitHub issue, describing what in your opinion needs changing by directly forking the source code of this documentation, making needed changes and sending us pull request, which will be then discussed and eventually incorporated The link to the documentation repository is located in the upper-right corner of this website. Keep in mind, that it's usually better to open new issue to start a discussion before implementing changes that may or may not find their way into next release, in order to avoid unnecessary work. Please read Contributor's Guide on GitHub repository for more detailed information.","title":"Contributing"},{"location":"features/features-overview/","text":"Features Overview \u00b6 Below you will find short overview of all features that come with Reborn 1.12 patch. Every feature has also it's own dedicated page where it is described in detail. Admin accounts and permissions \u00b6 STABLE Traditionally, as a server administrator, you would manage your server via RCon (Remote Console) commands. Since RCon access is protected with a single password, getting help in moderating your server meant that you had to give away this password to other people and give them full control over the server. Reborn patch let's you create individual admin accounts with selected privileges. This way you can safely involve other people in server administration when you are away from your PC and give them specific privileges based on the level of trust you have for them. Banning and kicking players \u00b6 STABLE IP Banning \u00b6 Now you can ban player's IPs with simple command. It allows you to use wildcards to ban IP ranges. No more need of external applications for kicking people. This is a true (not emulated by auto-kicking) ban functionality that forbids player from connecting to the server. Name Banning \u00b6 This feature lets you ban impolite names from being used on your server or any occurrence of bad words in players names. Extended player kicking \u00b6 Reborn patch extends standard capabilities of kicking players out from the server with few new commands that add even more options to your admin tools arsenal. Chat management \u00b6 STABLE You can use it to punish people who use too many impolite, rude words and abuse your server this way. It is also possible to disable game chat entirely or for selected players. Protected player names \u00b6 STABLE With this feature you can protect player names with passwords. Only player who knows the password will be able to use protected name on your server. It's very useful if you want to protect names of your clan mambers or server admins and make sure no one else but them will be able to use them. This protects you against others spoofing server admins, clan members and against name stealing hacks which automatically change name of a cheater to someone elses name. When this kind of a cheat will try to steal player's protected name, cheater will get kicked. Anti Wallhack \u00b6 UNSTABLE The anti-wallhack is a blocker that works server side, it doesn't disable wallhacks on the client but it makes them almost useless. All the integrated blockers are working server side. A wallhack (cham skins, radar) works because the server usually sends all player position information to the client regardless if a player is visible or not. This is what wallhacks are using to render players behind walls. Now the anti-wallhack technology used in the patch checks for every client if a player is visible or not and sends only information about truly visible players to the client (information about player behind walls isn't send) - information that the client doesn't have can't be used to render players behind walls. This method can't be bypassed by clients and blocks successfully all kind of wallhacks, cham skins, etc. Anti NoRecoil \u00b6 UNSTABLE When player is using a NoRecoil cheat, his weapon doesn't kick up when he fires it. This system is responsible for detecting NoRecoil cheats and emulating recoil serverside so if player is using this cheat, he will get recoil/kick added to his weapon by the server and he can't do anything about this. Anti Shoot Through Walls Hack \u00b6 STABLE STWH stands for Shoot Through Walls Hack. Our system detects player who uses this cheat, and when he tries to shoot through a wall, it blocks his bullet, making the cheat useless. High Ping Autokick \u00b6 STABLE You can turn on autokick option for players with ping higher than a value you set. Connections Limiter \u00b6 STABLE You can set a max connections per IP limit. This way you can decide how many people from one IP can join your server. This can be used as an additional measure against fake player flood attacks. Anti Packet Flood \u00b6 STABLE Some cheaters might want to flood your server in order to remove your server from the list of online game servers, drop players from it or even perform a remote crash. To achieve this, they would perform a Denial of Service attack by flooding your server with malicious, spoofed getstatus and getinfo packets. MoH:AA server will have to handle millions of packet requests and will get busy trying to send responses instead of processing game play action. This feature will render such attacks useless by detecting IPs from which the attack comes and ignoring their requests. Stufftext Bypass Detection \u00b6 UNSTABLE stufftext is a server-side scripting command. It was created for scripters allowing them to change client settings in server-sided mods they write. Many mods make use of it. It can be used to force players to make screenshot (known as Forced SS), force them to turn off ForceModels or force their cvars to good values (this way some cheats could be turned off with server-sided mod). However client can bypass this stufftext command so it no longer works on his MoH:AA client. This way he would remain safe from any Admin Mods like Foresight, CI etc. This feature checks if player has this stufftext command bypassed, by using special technique and kicks player whenever it detects that he has it bypassed. Upgraded Voting System \u00b6 STABLE MoH:AA voting was never secure and almost never used. Thats why we have rewritten it. Now you can specify which commands players can use when voting and which maps they can vote for. When vote is casted, system will broadcast a graphical message to all players about current vote and other informations like: votes percentage, command that will be sent to server and after how much time the vote will expire. Automatic updates \u00b6 STABLE This will make updating patch a lot easier for developers and users. It automatically checks for new patch updates and installs them while server is running. You won't be bothered with restarting or closing the server to have up-to-date patch. Reborn Extended Scripting Engine \u00b6 STABLE We've managed to extend MoH:AA scripting engine with our own functionality that most of modders have never dreamt of. Reborn Extended Scripting Engine introduces 45 new script commands that can be used by modders to create even more powerful, content rich mods. Now they can: operate on files, date and time, create huddraw elements for individual players, communicate with server console, get extended information about each player and many more! We've also introduced Scripting EventSystem which allows modders to handle certain game events from their mods. Now they are able to interpret users keyboard input, handle players connection, disconnection, damage, kill events as well as map change, map restart events and more. Extras \u00b6 With Reborn patch server admins can perform even more actions, some of them are: disabling chat for all or only selected players disabling taunts for all or only selected players turning on simple team balancer kicking players with specifing reason of the kick sending private server messages to selected players These are only examples. You should read the rest of the documentation to learn about them all! Bug and Crash Fixes \u00b6 Medal of Honor Reborn patch comes with many fixes enabled by default: lod_spawn crash fix leave_team crash fix _fps skin crash fix dog, wuss, noclip, tele, give, fullheal, health, giveweapon - bad command fix say command buffer overflow crash fix userinfo buffer overflow crash fix remote crash fix (BufferOverflow - mohaabof & new one - infoboom) connect packet crash fix mohaa fill flood/crash fix (aka fake players fix) RCon flood protection getstatus/getinfo packet flood protection granade crash fix ladder crash fix swap team crash fix MG42 crouch fix landsharking fix shoot through Black Windows/Furniture/Light Bulbs fix","title":"Features Overview"},{"location":"features/features-overview/#features-overview","text":"Below you will find short overview of all features that come with Reborn 1.12 patch. Every feature has also it's own dedicated page where it is described in detail.","title":"Features Overview"},{"location":"features/features-overview/#admin-accounts-and-permissions","text":"STABLE Traditionally, as a server administrator, you would manage your server via RCon (Remote Console) commands. Since RCon access is protected with a single password, getting help in moderating your server meant that you had to give away this password to other people and give them full control over the server. Reborn patch let's you create individual admin accounts with selected privileges. This way you can safely involve other people in server administration when you are away from your PC and give them specific privileges based on the level of trust you have for them.","title":"Admin accounts and permissions"},{"location":"features/features-overview/#banning-and-kicking-players","text":"STABLE","title":"Banning and kicking players"},{"location":"features/features-overview/#ip-banning","text":"Now you can ban player's IPs with simple command. It allows you to use wildcards to ban IP ranges. No more need of external applications for kicking people. This is a true (not emulated by auto-kicking) ban functionality that forbids player from connecting to the server.","title":"IP Banning"},{"location":"features/features-overview/#name-banning","text":"This feature lets you ban impolite names from being used on your server or any occurrence of bad words in players names.","title":"Name Banning"},{"location":"features/features-overview/#extended-player-kicking","text":"Reborn patch extends standard capabilities of kicking players out from the server with few new commands that add even more options to your admin tools arsenal.","title":"Extended player kicking"},{"location":"features/features-overview/#chat-management","text":"STABLE You can use it to punish people who use too many impolite, rude words and abuse your server this way. It is also possible to disable game chat entirely or for selected players.","title":"Chat management"},{"location":"features/features-overview/#protected-player-names","text":"STABLE With this feature you can protect player names with passwords. Only player who knows the password will be able to use protected name on your server. It's very useful if you want to protect names of your clan mambers or server admins and make sure no one else but them will be able to use them. This protects you against others spoofing server admins, clan members and against name stealing hacks which automatically change name of a cheater to someone elses name. When this kind of a cheat will try to steal player's protected name, cheater will get kicked.","title":"Protected player names"},{"location":"features/features-overview/#anti-wallhack","text":"UNSTABLE The anti-wallhack is a blocker that works server side, it doesn't disable wallhacks on the client but it makes them almost useless. All the integrated blockers are working server side. A wallhack (cham skins, radar) works because the server usually sends all player position information to the client regardless if a player is visible or not. This is what wallhacks are using to render players behind walls. Now the anti-wallhack technology used in the patch checks for every client if a player is visible or not and sends only information about truly visible players to the client (information about player behind walls isn't send) - information that the client doesn't have can't be used to render players behind walls. This method can't be bypassed by clients and blocks successfully all kind of wallhacks, cham skins, etc.","title":"Anti Wallhack"},{"location":"features/features-overview/#anti-norecoil","text":"UNSTABLE When player is using a NoRecoil cheat, his weapon doesn't kick up when he fires it. This system is responsible for detecting NoRecoil cheats and emulating recoil serverside so if player is using this cheat, he will get recoil/kick added to his weapon by the server and he can't do anything about this.","title":"Anti NoRecoil"},{"location":"features/features-overview/#anti-shoot-through-walls-hack","text":"STABLE STWH stands for Shoot Through Walls Hack. Our system detects player who uses this cheat, and when he tries to shoot through a wall, it blocks his bullet, making the cheat useless.","title":"Anti Shoot Through Walls Hack"},{"location":"features/features-overview/#high-ping-autokick","text":"STABLE You can turn on autokick option for players with ping higher than a value you set.","title":"High Ping Autokick"},{"location":"features/features-overview/#connections-limiter","text":"STABLE You can set a max connections per IP limit. This way you can decide how many people from one IP can join your server. This can be used as an additional measure against fake player flood attacks.","title":"Connections Limiter"},{"location":"features/features-overview/#anti-packet-flood","text":"STABLE Some cheaters might want to flood your server in order to remove your server from the list of online game servers, drop players from it or even perform a remote crash. To achieve this, they would perform a Denial of Service attack by flooding your server with malicious, spoofed getstatus and getinfo packets. MoH:AA server will have to handle millions of packet requests and will get busy trying to send responses instead of processing game play action. This feature will render such attacks useless by detecting IPs from which the attack comes and ignoring their requests.","title":"Anti Packet Flood"},{"location":"features/features-overview/#stufftext-bypass-detection","text":"UNSTABLE stufftext is a server-side scripting command. It was created for scripters allowing them to change client settings in server-sided mods they write. Many mods make use of it. It can be used to force players to make screenshot (known as Forced SS), force them to turn off ForceModels or force their cvars to good values (this way some cheats could be turned off with server-sided mod). However client can bypass this stufftext command so it no longer works on his MoH:AA client. This way he would remain safe from any Admin Mods like Foresight, CI etc. This feature checks if player has this stufftext command bypassed, by using special technique and kicks player whenever it detects that he has it bypassed.","title":"Stufftext Bypass Detection"},{"location":"features/features-overview/#upgraded-voting-system","text":"STABLE MoH:AA voting was never secure and almost never used. Thats why we have rewritten it. Now you can specify which commands players can use when voting and which maps they can vote for. When vote is casted, system will broadcast a graphical message to all players about current vote and other informations like: votes percentage, command that will be sent to server and after how much time the vote will expire.","title":"Upgraded Voting System"},{"location":"features/features-overview/#automatic-updates","text":"STABLE This will make updating patch a lot easier for developers and users. It automatically checks for new patch updates and installs them while server is running. You won't be bothered with restarting or closing the server to have up-to-date patch.","title":"Automatic updates"},{"location":"features/features-overview/#reborn-extended-scripting-engine","text":"STABLE We've managed to extend MoH:AA scripting engine with our own functionality that most of modders have never dreamt of. Reborn Extended Scripting Engine introduces 45 new script commands that can be used by modders to create even more powerful, content rich mods. Now they can: operate on files, date and time, create huddraw elements for individual players, communicate with server console, get extended information about each player and many more! We've also introduced Scripting EventSystem which allows modders to handle certain game events from their mods. Now they are able to interpret users keyboard input, handle players connection, disconnection, damage, kill events as well as map change, map restart events and more.","title":"Reborn Extended Scripting Engine"},{"location":"features/features-overview/#extras","text":"With Reborn patch server admins can perform even more actions, some of them are: disabling chat for all or only selected players disabling taunts for all or only selected players turning on simple team balancer kicking players with specifing reason of the kick sending private server messages to selected players These are only examples. You should read the rest of the documentation to learn about them all!","title":"Extras"},{"location":"features/features-overview/#bug-and-crash-fixes","text":"Medal of Honor Reborn patch comes with many fixes enabled by default: lod_spawn crash fix leave_team crash fix _fps skin crash fix dog, wuss, noclip, tele, give, fullheal, health, giveweapon - bad command fix say command buffer overflow crash fix userinfo buffer overflow crash fix remote crash fix (BufferOverflow - mohaabof & new one - infoboom) connect packet crash fix mohaa fill flood/crash fix (aka fake players fix) RCon flood protection getstatus/getinfo packet flood protection granade crash fix ladder crash fix swap team crash fix MG42 crouch fix landsharking fix shoot through Black Windows/Furniture/Light Bulbs fix","title":"Bug and Crash Fixes"},{"location":"features/modder/event-system/","text":"Introduction \u00b6 EventSystem Engine has been introduced since Release Candidate 2.5 Beta version of the patch. You can use it to bind certain events with your scripts, which will be executed when such events will take place. In short, EventSystem Engine allows scripters to have scripted events. Right now, EventSystem Engine supports 8 events: Scripter can write a script that will get executed by EventSystem Engine when one of them occurs. Such a script is called event callback handler and it have to be registered in the system before it can be used by it. To register event callback handlers, EventSystem Engine provides scripters with two commands: registerev - registers event callback handler unregisterev - unregisters event callback handler To see their full documentation please see Reborn Scripting Commands When scripter registers event callback handler it will get bound with certain event types listed earlier. EventSystem Engine will then execute his script (event callback handler) whenever events of given type will occur. Important EventSystem Engine allows only 1 to 1 binds, which means that you can't register one event type with more than one event callback handler. When scripter registers event callback handler, it won't be overwritten by next registerev commands, which means that EventSystem Engine will execute only those event callback handlers that where registered before any other callback handlers (in short: only firstly registered callback handlers). After map change, all events will be unregistered, so there's a need to register them again each map change, which shouldn't be a problem. Note Future EventSystem Engine may get improved or it's architecture may get changed a bit. Events \u00b6 Connected \u00b6 connected ( Entity entity ) Event that is generated when player has entered the server. Registering: local.result = registerev connected global/example.scr::connected or local.result = registerev connected global/connectedhandler.scr Callback handler: connected local.player: // your code here end or main local.player: // your code here end Where: local.player - player that has connected to server Disconnected \u00b6 disconnected ( Entity player ) Event that is generated when player has disconnected from the server. (it's executed just right before real disconnection) Registering: local.result = registerev disconnected global/example.scr::disconnected or local.result = registerev disconnected global/disconnectedhandler.scr Callback handler: disconnected local.player: // your code here end or main local.player: // your code here end Where: local.player - player that has disconnected from server. Spawn \u00b6 spawn ( Entity player ) Event that is generated when player has spawned for the first time after entering the server, and each time he respawns. (It won't be generated for the first time when player is already spawned and map restart will occur. To force this event to be called after map restart, you have to move player to spectator before map restart.) Registering: local.result = registerev spawn global/example.scr::spawn or local.result = registerev spawn global/spawnhandler.scr Callback handler: spawn local.player: // your code here end or main local.player: // your code here end Where: local.player - player that has spawned or respawned. Damage \u00b6 damage ( Entity target, Entity inflictor, Float damage, Vector position, Vector direction, Vector normal, Integer knockback, Integer damageflags, Integer meansofdeath, Integer location, Entity entity) Event that is generated when entity (not only player) gets damaged. Registering: local.result = registerev damage global/example.scr::damage or local.result = registerev damage global/damagehandler.scr Callback handler: damage local.target local.inflictor local.damage local.position local.direction local.normal local.knockback local.damageflags local.meansofdeath local.location local.entity: // your code here end or main local.target local.inflictor local.damage local.position local.direction local.normal local.knockback local.damageflags local.meansofdeath local.location local.entity: // you code here end Where: local.target - target entity isn't always player or actor entity. It can be a weapon entity or world entity local.inflictor - inflictor entity, entity that deals damage local.damage - float damage, damage amount local.position - vector position local.direction - vector direction local.normal - vector normal local.knockback - int knockback value local.damageflags - int damageflags local.meansofdeath - int meansofdeath local.location - int location id local.entity - entity that get's damage, often a player but can be any oder damageable entity Kill \u00b6 kill ( Entity attacker, Float damage, Entity inflictor, Vector position, Vector direction, Vector normal, Integer knockback, Integer damageflags, Integer meansofdeath, Integer location, Entity player) Event that is generated when player gets killed or when player kills somebody. Registering: local.result = registerev kill global/example.scr::kill or local.result = registerev kill global/killhandler.scr Callback handler: kill local.attacker local.damage local.inflictor local.position local.direction local.normal local.knockback local.damageflags local.meansofdeath local.location local.player: // your code here end or main local.attacker local.damage local.inflictor local.position local.direction local.normal local.knockback local.damageflags local.meansofdeath local.location local.player: // you code here end Where: local.attacker - attacker entity (player) that killed local.damage - float damage, damage amount local.inflictor - inflictor entity, in most cases it isn't a player entity, it can be a weapon entity or world entity local.position - vector position local.direction - vector direction local.normal - vector normal local.knockback - int knockback value local.damageflags - int damageflags local.meansofdeath - int meansofdeath local.location - int location id local.player - player entity that got killed Keypress \u00b6 keypress ( Entity player, Integer keynum ) Event that is generated when player has sent special key press command to server. Registering: local.result = registerev keypress global/example.scr::keypress or local.result = registerev keypress global/keypresshandler.scr Callback handler: keypress local.player local.keynum: // your code here end or main local.player local.keynum: // your code here end Where: local.player - player that has sent special keypress command to server local.keynum - KeyID To use this special event, scripter needs to bind certain player keys with command: keyp #id where #id is a number. Example: bind NumPad1 keyp 1 When error occurs (for example player instead of number has sent command like: keyp randomtext) a default KeyID will be returned, which is 0. Servercommand \u00b6 servercommand ( Entity player, String command, String args ) Event that is generated when player has sent special server command to server. Registering: local.result = registerev servercommand global/example.scr::servercommand or local.result = registerev servercommand global/servercommandhandler.scr Callback handler: servercommand local.player local.command local.args: // your code here end or main local.player local.command local.args: // your code here end Where: local.player - player that has sent special server command to server local.command - command local.args - command arguments as single not splitted string To use this special event, scripter needs to bind certain player keys with command: scmd command arg1 arg2 arg3 ... where command is a command, and arg1... are command arguments. Example: bind NumPad1 scmd getplayerpos UnnamedSoldier Intermission \u00b6 intermission ( Integer type ) Event that is generated when server enters intermission state, which happens during map changes, map restarts and player intermission screen. Registering: local.result = registerev intermission global/example.scr::intermission or local.result = registerev intermission global/intermissionhandler.scr Callback handler: intermission local.type: // your code here end or main local.type: // your code here end Where: local.type - type of server intermission 0 = Player intermission screen 1 = Map change (happens after using commands: map, gamemap , but also right after player intermission screen) 2 = Map restart (happens after restart command) Miscellaneous \u00b6 Kill and damage locations -1 - General - ie:bash, rocket in the kisser, blown away, played catch, etc.. 0 - Head 1 - Helmet 2 - Neck 3 - Upper Torso 4 - Middle Torso 5 - Lower Torso 6 - Pelvis 7 - Upper Right Arm 8 - Upper Left Arm 9 - Upper Right Leg 10 - Upper Left Leg 11 - Lower Right Arm 12 - Lower Left Arm 13 - Lower Right Leg 14 - Lower Left Leg 15 - Right Hand 16 - Left Hand 17 - Right Foot 18 - Left Foot Means of Death 0 - none 1 - suicide 2 - crush 3 - crush_every_frame 4 - telefrag 5 - lava 6 - slime 7 - falling 8 - last_self_inflicted 9 - explosion 10 - explodewall 11 - electric 12 - electricwater 13 - thrownobject 14 - grenade 15 - beam 16 - rocket 17 - impact 18 - bullet 19 - fast_bullet 20 - vehicle 21 - fire 22 - flashbang 23 - on_fire 24 - gib 25 - impale 26 - bash 27 - shotgun Default Damage Multipliers -1 - 1.00 0 - 2.00 1 - 2.00 2 - 2.00 3 - 1.00 4 - 0.95 5 - 0.90 6 - 0.85 7 - 0.80 8 - 0.80 9 - 0.80 10 - 0.80 11 - 0.60 12 - 0.60 13 - 0.60 14 - 0.60 15 - 0.50 16 - 0.50 17 - 0.50 18 - 0.50","title":"Event system"},{"location":"features/modder/event-system/#introduction","text":"EventSystem Engine has been introduced since Release Candidate 2.5 Beta version of the patch. You can use it to bind certain events with your scripts, which will be executed when such events will take place. In short, EventSystem Engine allows scripters to have scripted events. Right now, EventSystem Engine supports 8 events: Scripter can write a script that will get executed by EventSystem Engine when one of them occurs. Such a script is called event callback handler and it have to be registered in the system before it can be used by it. To register event callback handlers, EventSystem Engine provides scripters with two commands: registerev - registers event callback handler unregisterev - unregisters event callback handler To see their full documentation please see Reborn Scripting Commands When scripter registers event callback handler it will get bound with certain event types listed earlier. EventSystem Engine will then execute his script (event callback handler) whenever events of given type will occur. Important EventSystem Engine allows only 1 to 1 binds, which means that you can't register one event type with more than one event callback handler. When scripter registers event callback handler, it won't be overwritten by next registerev commands, which means that EventSystem Engine will execute only those event callback handlers that where registered before any other callback handlers (in short: only firstly registered callback handlers). After map change, all events will be unregistered, so there's a need to register them again each map change, which shouldn't be a problem. Note Future EventSystem Engine may get improved or it's architecture may get changed a bit.","title":"Introduction"},{"location":"features/modder/event-system/#events","text":"","title":"Events"},{"location":"features/modder/event-system/#connected","text":"connected ( Entity entity ) Event that is generated when player has entered the server. Registering: local.result = registerev connected global/example.scr::connected or local.result = registerev connected global/connectedhandler.scr Callback handler: connected local.player: // your code here end or main local.player: // your code here end Where: local.player - player that has connected to server","title":"Connected"},{"location":"features/modder/event-system/#disconnected","text":"disconnected ( Entity player ) Event that is generated when player has disconnected from the server. (it's executed just right before real disconnection) Registering: local.result = registerev disconnected global/example.scr::disconnected or local.result = registerev disconnected global/disconnectedhandler.scr Callback handler: disconnected local.player: // your code here end or main local.player: // your code here end Where: local.player - player that has disconnected from server.","title":"Disconnected"},{"location":"features/modder/event-system/#spawn","text":"spawn ( Entity player ) Event that is generated when player has spawned for the first time after entering the server, and each time he respawns. (It won't be generated for the first time when player is already spawned and map restart will occur. To force this event to be called after map restart, you have to move player to spectator before map restart.) Registering: local.result = registerev spawn global/example.scr::spawn or local.result = registerev spawn global/spawnhandler.scr Callback handler: spawn local.player: // your code here end or main local.player: // your code here end Where: local.player - player that has spawned or respawned.","title":"Spawn"},{"location":"features/modder/event-system/#damage","text":"damage ( Entity target, Entity inflictor, Float damage, Vector position, Vector direction, Vector normal, Integer knockback, Integer damageflags, Integer meansofdeath, Integer location, Entity entity) Event that is generated when entity (not only player) gets damaged. Registering: local.result = registerev damage global/example.scr::damage or local.result = registerev damage global/damagehandler.scr Callback handler: damage local.target local.inflictor local.damage local.position local.direction local.normal local.knockback local.damageflags local.meansofdeath local.location local.entity: // your code here end or main local.target local.inflictor local.damage local.position local.direction local.normal local.knockback local.damageflags local.meansofdeath local.location local.entity: // you code here end Where: local.target - target entity isn't always player or actor entity. It can be a weapon entity or world entity local.inflictor - inflictor entity, entity that deals damage local.damage - float damage, damage amount local.position - vector position local.direction - vector direction local.normal - vector normal local.knockback - int knockback value local.damageflags - int damageflags local.meansofdeath - int meansofdeath local.location - int location id local.entity - entity that get's damage, often a player but can be any oder damageable entity","title":"Damage"},{"location":"features/modder/event-system/#kill","text":"kill ( Entity attacker, Float damage, Entity inflictor, Vector position, Vector direction, Vector normal, Integer knockback, Integer damageflags, Integer meansofdeath, Integer location, Entity player) Event that is generated when player gets killed or when player kills somebody. Registering: local.result = registerev kill global/example.scr::kill or local.result = registerev kill global/killhandler.scr Callback handler: kill local.attacker local.damage local.inflictor local.position local.direction local.normal local.knockback local.damageflags local.meansofdeath local.location local.player: // your code here end or main local.attacker local.damage local.inflictor local.position local.direction local.normal local.knockback local.damageflags local.meansofdeath local.location local.player: // you code here end Where: local.attacker - attacker entity (player) that killed local.damage - float damage, damage amount local.inflictor - inflictor entity, in most cases it isn't a player entity, it can be a weapon entity or world entity local.position - vector position local.direction - vector direction local.normal - vector normal local.knockback - int knockback value local.damageflags - int damageflags local.meansofdeath - int meansofdeath local.location - int location id local.player - player entity that got killed","title":"Kill"},{"location":"features/modder/event-system/#keypress","text":"keypress ( Entity player, Integer keynum ) Event that is generated when player has sent special key press command to server. Registering: local.result = registerev keypress global/example.scr::keypress or local.result = registerev keypress global/keypresshandler.scr Callback handler: keypress local.player local.keynum: // your code here end or main local.player local.keynum: // your code here end Where: local.player - player that has sent special keypress command to server local.keynum - KeyID To use this special event, scripter needs to bind certain player keys with command: keyp #id where #id is a number. Example: bind NumPad1 keyp 1 When error occurs (for example player instead of number has sent command like: keyp randomtext) a default KeyID will be returned, which is 0.","title":"Keypress"},{"location":"features/modder/event-system/#servercommand","text":"servercommand ( Entity player, String command, String args ) Event that is generated when player has sent special server command to server. Registering: local.result = registerev servercommand global/example.scr::servercommand or local.result = registerev servercommand global/servercommandhandler.scr Callback handler: servercommand local.player local.command local.args: // your code here end or main local.player local.command local.args: // your code here end Where: local.player - player that has sent special server command to server local.command - command local.args - command arguments as single not splitted string To use this special event, scripter needs to bind certain player keys with command: scmd command arg1 arg2 arg3 ... where command is a command, and arg1... are command arguments. Example: bind NumPad1 scmd getplayerpos UnnamedSoldier","title":"Servercommand"},{"location":"features/modder/event-system/#intermission","text":"intermission ( Integer type ) Event that is generated when server enters intermission state, which happens during map changes, map restarts and player intermission screen. Registering: local.result = registerev intermission global/example.scr::intermission or local.result = registerev intermission global/intermissionhandler.scr Callback handler: intermission local.type: // your code here end or main local.type: // your code here end Where: local.type - type of server intermission 0 = Player intermission screen 1 = Map change (happens after using commands: map, gamemap , but also right after player intermission screen) 2 = Map restart (happens after restart command)","title":"Intermission"},{"location":"features/modder/event-system/#miscellaneous","text":"Kill and damage locations -1 - General - ie:bash, rocket in the kisser, blown away, played catch, etc.. 0 - Head 1 - Helmet 2 - Neck 3 - Upper Torso 4 - Middle Torso 5 - Lower Torso 6 - Pelvis 7 - Upper Right Arm 8 - Upper Left Arm 9 - Upper Right Leg 10 - Upper Left Leg 11 - Lower Right Arm 12 - Lower Left Arm 13 - Lower Right Leg 14 - Lower Left Leg 15 - Right Hand 16 - Left Hand 17 - Right Foot 18 - Left Foot Means of Death 0 - none 1 - suicide 2 - crush 3 - crush_every_frame 4 - telefrag 5 - lava 6 - slime 7 - falling 8 - last_self_inflicted 9 - explosion 10 - explodewall 11 - electric 12 - electricwater 13 - thrownobject 14 - grenade 15 - beam 16 - rocket 17 - impact 18 - bullet 19 - fast_bullet 20 - vehicle 21 - fire 22 - flashbang 23 - on_fire 24 - gib 25 - impale 26 - bash 27 - shotgun Default Damage Multipliers -1 - 1.00 0 - 2.00 1 - 2.00 2 - 2.00 3 - 1.00 4 - 0.95 5 - 0.90 6 - 0.85 7 - 0.80 8 - 0.80 9 - 0.80 10 - 0.80 11 - 0.60 12 - 0.60 13 - 0.60 14 - 0.60 15 - 0.50 16 - 0.50 17 - 0.50 18 - 0.50","title":"Miscellaneous"},{"location":"features/modder/extended-scripting/","text":"Introduction \u00b6 Reborn patch has introduced a number of new scripting commands available for people to utilize in their mods. File Handlers \u00b6 ScriptThread -> Listener -> Class fclose \u00b6 fclose( Integer filehandle ) Closes file. Example: local.return = fclose local.file or local.return = fclose(local.file) Result: If file is successfully closed, a zero value is returned. On failure, EOF is returned. Important You can open only 32 files at once. This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - fclose fcopy \u00b6 fcopy( String filename, String copyname ) Creates a copy of file. Example: local.ret = fcopy local.filename local.copyname Result: If the file is successfully copied, a zero value is returned. When function fails to open original file, a -1 value is returned. When function fails to create a second file, a -2 value is returned. When function fails during data copy process, a -3 value is returned. Important You can open only 32 files at once. feof \u00b6 feof( Integer filehandle ) Checks for end of file. Example: local.return = feof local.file or local.return = feof(local.file) Result: A non-zero value is returned in the case that the End-of-File indicator associated with the file is set. Otherwise, a zero value is returned. Important You can open only 32 files at once. This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - feof ferror \u00b6 ferror( Integer filehandle ) Checks if the error indicator associated with file is set, returning a value different from zero if it is. Example: local.ret = ferror local.file or local.ret = ferror(local.file) Result: If the error indicator associated with the file was set, the function returns a nonzero value. Otherwise, it returns a zero value. Important You can open only 32 files at once. This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - ferror fexists \u00b6 fexists( String filename ) Checks if file with given filename exists. Example: local.ret = fexists \"folder/folder2/file.txt\" or local.ret = fexists(\"folder/folder2/file.txt\") Result: If file exists, function returns 1. Otherwise it returns 0. Important You can open only 32 files at once. fflush \u00b6 fflush( Integer filehandle ) If the given file was open for writing and the last i/o operation was an output operation, any unwritten data in the output buffer is written to the file. Note The file remains open after this command. Example: local.ret = fflush local.file or local.ret = fflush(local.file) Result: A zero value indicates success. If an error occurs, EOF is returned and the error indicator is set. Important You can open only 32 files at once. This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - fflush fgetc \u00b6 fgetc( Integer filehandle ) Reads single character from file. Example: local.char = fgetc local.file or local.char = fgetc(local.file) Result: The character read is returned as an int value. You need to cast it to char if you want to use it in string. Important You can open only 32 files at once. This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - fgetc fgets \u00b6 fgets( Integer filehandle, Integer maxbuffsize ) Reads string line from file. Where: maxbuffsize specifies maximum buffer size that will be allocated to store the string in memory. Example: local.text = fgets local.file 256 or local.text = fgets(local.file 256) Result: If the End-of-File is encountered and no characters have been read 0 (null) is returned. If an error occurs 0 (null) is returned. If a memory allocation error occurs, -1 is returned. Important You can open only 32 files at once. This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - fgets flist \u00b6 flist( String path, String extension, Integer scanSubDirectories ) Returns a list (array) of files with given extension located in given path. Function handles .pk3 folder structure and normal system directories. When scanSubDirectories equals 1, function will include subdirectories located under directory path. Extension needs to have \".\" (dot) included. Otherwise it will act as filter. Example: local.list = flist local.path local.extension local.scanSubDirectories Result: List with filenames and their paths found. Important You can open only 32 files at once. fnewdir \u00b6 fnewdir( String dirname ) Creates a new directory with given dirname Example: local.result = fnewdir \"main/new_folder\" Result: 0 = Success -1 = Error, directory already exists fopen \u00b6 fopen( String filename, String accessType ) Opens file. Example: local.file = fopen \"main/config.txt\" \"a+\" or local.file = fopen(\"main/config.txt\" \"a+\") Result: Command returns file handle that is needed for identification and further operations on this file. Important You can open only 32 files at once. This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - fopen fputc \u00b6 fputc( Integer filehandle, String character ) Writes a character to the file and advances the position indicator. Example: local.return = fputc local.file \"a\" or local.return = fputc(local.file \"a\") Result: If there are no errors, the same character that has been written is returned. If an error occurs, EOF is returned and the error indicator is set. You have to cast returned value to char. If you pass longer string, only first character will be written to file. Important You can open only 32 files at once. This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - fputc fputs \u00b6 fputs( Integer filehandle, String text ) Writes text to the file and advances the position indicator. Example: local.return = fputs local.file \"This is example\" or local.return = fputs(local.file \"This is example\") Result: On success, a non-negative value is returned. On error, the function returns EOF. Important You can open only 32 files at once. This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - fputs freadall \u00b6 freadall( Integer filehandle ) Reads whole file into a string at once. File has to be opened in binary mode (rb, rb+) Example: local.content = freadall local.file or local.content = freadall(local.file) Result: Function returns file content as string. Warning Don't read binary files with this function because it may cause memory leaks. Important You can open only 32 files at once. freadpak \u00b6 freadpak( String filename ) Reads file located inside .pk3 file in text mode and returns it's content as string. Example: local.content = freadpak local.filename Result: If the file is successfully read, function returns a string with it's content. When function fails to find, open or read a file from .pk3, a -1 value is returned. Important You can open only 32 files at once. fremove \u00b6 fremove( String filename ) Removes the file with given filename. Example: local.ret = fremove local.filename Result: If the file is successfully deleted, a zero value is returned. On failure, a nonzero value is returned and the errno variable is set to the corresponding error code. Important You can open only 32 files at once. This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - remove fremovedir \u00b6 fremovedir( String dirname ) Removes the directory with given dirname. Example: local.result = fremovedir \"main/subfolder\" Result: 0 = Success -1 = Error, directory doesn't exists or contains files in it frename \u00b6 frename( String oldname, String newname ) Renames the file with given filename. Example: local.ret = frename local.oldname local.newname Result: If the file is successfully renamed, a zero value is returned. On failure, a nonzero value is returned and the errno variable is set to the corresponding error code. Important You can open only 32 files at once. This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - rename frewind \u00b6 frewind( Integer filehandle ) Sets the position indicator associated with file to the beginning of the file. Example: local.return = frewind local.file or local.return = frewind(local.file) Result: none Important You can open only 32 files at once. This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - rewind fsaveall \u00b6 fsaveall( Integer filehandle, String content ) Writes string content to file at once. File has to be opened in binary mode (wb, wb+, ab). The content will start to be saved from the current file position. Example: local.ret = fsaveall local.file local.content Result: Function returns number of character written to file or -1 if content is NULL. Important You can open only 32 files at once. fseek \u00b6 fseek( Integer filehandle, Integer offset, Integer origin ) Sets the position indicator associated with the file to a new position defined by adding offset to a reference position specified by origin. Example: local.return = fseek local.file 154 0 or local.return = fseek(local.file 154 0) Where origin: 0 = SEEK_SET 1 = SEEK_CUR 2 = SEEK_END Result: If successful, the function returns a zero value. Otherwise, it returns nonzero value. Important You can open only 32 files at once. This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - fseek ftell \u00b6 ftell( Integer filehandle ) Returns the current value of the position indicator of the file. Example: local.return = ftell local.file or local.return = ftell(local.file) Result: On success, the current value of the position indicator is returned. If an error occurs, -1 is returned. Important You can open only 32 files at once. This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - ftell iHuddraws \u00b6 ScriptThread -> Listener -> Class ihuddraw_align \u00b6 ihuddraw_align( Entity player, Integer index, String h_align, String v_align ) Sets the alignment of a huddraw element for individual player. Where: h_align = \"left\", \"center\", \"right\" v_align = \"bottom\", \"center\", \"top\" index = index of huddraw element to be set player = entity of player that will have his huddraw element set Example: ihuddraw_align $player[1] 15 right top or ihuddraw_align( $player[1] 15 \"right\" \"top\" ) ihuddraw_alpha \u00b6 ihuddraw_alpha( Entity player, Integer index, Float alpha ) Sets the alpha of a huddraw element for individual player. Where: index = index of huddraw element to be set player = entity of player that will have his huddraw element set Example: ihuddraw_alpha $player[1] 15 1 or ihuddraw_alpha( $player[1] 15 1 ) ihuddraw_color \u00b6 ihuddraw_color( Entity player, Integer index, Float red, Float green, Float blue ) Sets the color for a huddraw element for individual player. Where: index = index of huddraw element to be set player = entity of player that will have his huddraw element set Example: ihuddraw_color $player[1] 15 1 1 1 or ihuddraw_color( $player[1] 15 1 1 1 ) ihuddraw_font \u00b6 ihuddraw_font( Entity player, Integer index, String fontname ) Sets the font to use for a huddraw element, for individual player. Where: index = index of huddraw element to be set player = entity of player that will have his huddraw element set Example: ihuddraw_font $player[1] 15 \"verdana-14\" or ihuddraw_font( $player[1] 15 \"verdana-14\" ) ihuddraw_rect \u00b6 ihuddraw_rect( Entity player, Integer index, Integer x, Integer y, Integer width, Integer height ) Specifies the position of the upper left corner and size of a huddraw element for individual player Where: index = index of huddraw element to be set player = entity of player that will have his huddraw element set Example: ihuddraw_rect $player[1] 15 -140 65 0 0 or ihuddraw_rect( $player[1] 15 -140 65 0 0 ) ihuddraw_shader \u00b6 ihuddraw_shader( Entity player, Integer index, String shader ) Sets the shader to use for a particular huddraw element for individual player Where: index = index of huddraw element to be set player = entity of player that will have his huddraw element set Example: ihuddraw_shader $player[1] 15 \"textures/hud/axis\" or ihuddraw_shader( $player[1] 15 \"textures/hud/axis\" ) ihuddraw_string \u00b6 ihuddraw_string( Entity player, Integer index, String string ) Sets a string to be displayed. Clears the shader value of huddraw element for individual player Where: index = index of huddraw element to be set player = entity of player that will have his huddraw element set Example: ihuddraw_string $player[1] 15 \"I luv Reborn 1.12 Patch!\" or ihuddraw_string( $player[1] 15 \"I luv Reborn 1.12 Patch!\" ) ihuddraw_virtualsize \u00b6 ihuddraw_virtualsize( Entity player, Integer index, Integer virtual ) Sets if the huddraw element (for individual player) should use virutal screen resolution for positioning and size. Where: index = index of huddraw element to be set player = entity of player that will have his huddraw element set Example: ihuddraw_virtualsize $player[1] 15 1 or ihuddraw_virtualsize( $player[1] 15 1 ) Player \u00b6 ScriptThread -> Listener -> Class getclientnum \u00b6 getclientnum( Entity player ) Gets player's client number and returns it as integer. Example: local.player_clnum = getclientnum $player[1] or local.player_clnum = getclientnum( $player[1] ) getip \u00b6 getip( Entity player ) Gets player's ip address with port and returns it as string. Example: local.player_ip = getip $player[1] or local.player_ip = getip( $player[1] ) Result: 127.0.0.1:12203 getping \u00b6 getping( Entity player ) Gets player's ping and returns it as integer. Example: local.player_ping = getping $player[1] or local.player_ping = getping( $player[1] ) netname \u00b6 netname( Entity player ) Gets player's name and returns it as string. Example: local.player_name = netname $player[1] or local.player_name = netname( $player[1] ) Player \u00b6 Player (player) -> Sentient -> Animate -> Entity -> SimpleEntity -> Listener -> Class adddeaths \u00b6 adddeaths( Integer deaths ) Adds number of deaths to player. (Can be also negative) Example: $player[1] adddeaths 5 or $player[1] adddeaths -5 Result: If player had 8 deaths, he will have 13 deaths or If player had 8 deaths, he will have 3 deaths addkills \u00b6 addkills( Integer kills ) Adds number of kills to player. (Can be also negative) Example: $player[1] addkills 5 or $player[1] addkills -5 Result: If player had 8 kills, he will have 13 kills or If player had 8 kills, he will have 3 kills .adminrights \u00b6 .adminrights( void ) Gets the admin rights of the player ( Reborn ClientAdmin System ). Example: local.result = $player[1].adminrights Result: Returns the numeric value of the player's admin permissions Returns 0 if the player is not logged in as admin bindweap \u00b6 bindweap( Entity weapon ) Binds weapon to player. Sets him as weapon owner. 2nd use of the command will unbind the weapon from player. Example: $player[1] bindweap local.weapon local.weapon anim fire $player[1] bindweap local.weapon Result: Sets player as weapon owner. Warning This is sort of a hack&trick scripting command. It should only be used by experienced users and only like shown in the example - just before firing the weapon and just after, to unbind it from the player. Otherwise you can have errors, weapon model glued to player, or server crashes. It should be used only for some kind of remote turrets etc. getactiveweap \u00b6 getactiveweap( Integer weaponhand ) Gets currently active weapon from player's hand of given index Example: local.weapon = $player[1] getactiveweap 0 or local.weapon = $player[1] getactiveweap(0) Result: Weapon entity. Important You can use weaponhand index from 0-2 range, but it's preffered to use only 0 index, because other indexes my return false values that might crash server getconnstate \u00b6 getconnstate( void ) Gets state of player's connection. Example: local.connection_state = $player[1] getconnstate or local.connection_state = $player[1] getconnstate( ) Result: Returns integer value: 0 = CS_FREE - given player slot is free 1 = CS_ZOMBIE - given player slot is in zombie state (his data is still kept after he disconnected or lost connection) 2 = CS_CONNECTED - player has connected to server, but he's not yet in the game 3 = CS_PRIMED - player has passed through authorization checks and finished downloading any missing files 4 = CS_ACTIVE - player is in game and can start playing getdeaths \u00b6 getdeaths( void ) Gets number of player's deaths and returns it as integer. Example: local.player_deaths = $player[1] getdeaths or local.player_deaths = $player[1] getdeaths( ) Result: Number of player's deaths. Important Before using this function, check game type that is currently running. When g_gametype is 3 or 4, deaths aren't counted and result of this function will equal to kills amount that player has getkills \u00b6 getkills( void ) Gets number of player's kills and returns it as integer Example: local.player_kills = $player[1] getkills or local.player_kills = $player[1] getkills( ) Result: Number of players that this player has killed. .inventory \u00b6 .inventory( void ) Returns player's inventory Example: local.inventory= $player[1].inventory local.inventorySize = $player[1].inventory.size local.item1 = $player[1].inventory[0] Result: Array with entities in player's inventory. You can assign it to a variable or access directly. isadmin \u00b6 isadmin( void ) Checks if player is currently logged in as server administrator. Example: local.admin = $player[1] isadmin or local.admin = $player[1] isadmin( ) Result: Returns 1 if player is logged in as administrator, otherwise it returns 0. .leanleftheld \u00b6 .leanleftheld( void ) Returns 1 if player is leaning left. Otherwise returns 0. Example: if ( $player[1].leanleftheld ) ... Result: 1 = player is leaning left 0 = player is not leaning left .leanrightheld \u00b6 .leanrightheld( void ) Returns 1 if player is leaning right. Otherwise returns 0. Example: if ( $player[1].leanrightheld ) ... Result: 1 = player is leaning right 0 = player is not leaning right .runheld \u00b6 .runheld( void ) Returns 1 if player is not walking/holding the left shift key (+speed). Otherwise returns 0. Example: if ( $player[1].runheld ) ... Result: 1 = player is not holding the left shift key (+speed) 0 = player is holding the left shift key (+speed) Important This command works different than the getmovement command, it doesn't check the running state of the player. It will return 1 even is the player is in spectator mode .secfireheld \u00b6 .secfireheld( void ) Returns 1 if player is holding secondary fire button. Example: if( $player[1].secfireheld == 1 ) ... Result: 1 = player is holding secondary fire button 0 = opposite .userinfo \u00b6 .userinfo( void ) Returns player's userinfo Example: local.userinfo = $player[1].userinfo Result: String with player's userinfo Maths \u00b6 ScriptThread -> Listener -> Class acos \u00b6 acos( Float x ) Returns the principal value of the arc cosine of x, expressed in radians. Example: local.result = acos local.x Result: Floating point value in the interval [-1,+1]. Important This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - acos asin \u00b6 asin( Float x ) Returns the principal value of the arc sine of x, expressed in radians. Example: local.result = asin local.x Result: Floating point value in the interval [-1,+1]. Important This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - asin atan \u00b6 atan( Float x ) Returns the principal value of the arc tangent of x, expressed in radians. Notice that because of the sign ambiguity, a function cannot determine with certainty in which quadrant the angle falls only by its tangent value. You can use atan2 if you need to determine the quadrant. Example: local.result = atan local.x Result: Principal arc tangent of x, in the interval [-pi/2,+pi/2] radians. Important This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - atan atan2 \u00b6 atan2( Float y, [I]Float[I] x ) Returns the principal value of the arc tangent of y/x, expressed in radians. To compute the value, the function uses the sign of both arguments to determine the quadrant. Example: local.result = atan2 local.y local.x Result: Principal arc tangent of y/x, in the interval [-pi,+pi] radians. Important This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - atan2 ceil \u00b6 ceil( Float x ) Returns the smallest integral value that is not less than x. Example: local.result = ceil local.x Result: The smallest integral value not less than x. Important This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - ceil cos \u00b6 cos( Float x ) Returns the cosine of an angle of x radians. Example: local.result = cos local.x Result: Cosine of x. Important This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - cos cosh \u00b6 cosh( Float x ) Returns the hyperbolic cosine of x. Example: local.result = cosh local.x Result: Hyperbolic cosine of x. Important This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - cosh exp \u00b6 exp( Float x ) Returns the base-e exponential function of x, which is the e number raised to the power x. Example: local.result = exp local.x Result: Exponential value of x. Important This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - exp floor \u00b6 floor( Float x ) Returns the largest integral value that is not greater than x. Example: local.result = floor local.x Result: The largest integral value not greater than x. Important This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - floor fmod \u00b6 fmod( Float numerator, Float denominator ) Returns the floating-point remainder of numerator/denominator. The remainder of a division operation is the result of subtracting the integral quotient multiplied by the denominator from the numerator: remainder = numerator - quotient * denominator Example: local.result = fmod local.numerator local.denominator Result: The remainder of dividing the arguments. Important This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - fmod frexp \u00b6 frexp( Float x ) Breaks the floating point number x into its binary significand (a floating point value between 0.5(included) and 1.0(excluded)) and an integral exponent for 2, such that: x = significand * 2exponent If x is zero, both parts (significand and exponent) are zero. Example: local.result = frexp local.x Result: local.result[\"significand\"] - significand part local.result[\"exponent\"] - exponent part Important This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - frexp ldexp \u00b6 ldexp( Float x, Integer exponent ) Returns the resulting floating point value from multiplying x (the significand) by 2 raised to the power of exp (the exponent). Example: local.result = ldexp local.x local.exponent Result: The function returns float number: x * 2<sup>exp</sup> Important This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - ldexp log \u00b6 log( Float x ) Returns the natural logarithm of x. The natural logarithm is the base-e logarithm, the inverse of the natural exponential function (exp). For base-10 logarithms, a specific function log10 exists. Example: local.result = log local.x Result: Natural logarithm of x. Important This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - log log10 \u00b6 log10( Float x ) Returns the common (base-10) logarithm of x. Example: local.result = log10 local.x Result: Common logarithm of x, for values of x greater than zero. Important This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - log10 modf \u00b6 modf( Float x ) Breaks x into two parts: the integer part and the fractional part. Example: local.result = modf local.x Result: local.result[\"intpart\"] - integer part local.result[\"fractional\"] - fractional part Important This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - modf pow \u00b6 pow( Float x, Integer exponent ) Returns base raised to the power exponent: baseexponent Example: local.result = pow local.x local.exponent Result: The result of raising base to the power exponent. Important This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - pow sin \u00b6 sin( Float x ) Returns the sine of an angle of x radians. Example: local.result = sin local.x Result: Sine of x. Important This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - sin sinh \u00b6 sinh( Float x ) Returns the hyperbolic sine of x. Example: local.result = sinh local.x Result: Hyperbolic sine of x. Important This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - sinh sqrt \u00b6 sqrt( Float x ) Returns the square root of x. Example: local.result = sqrt local.x Result: Square root of x. Important This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - sqrt tan \u00b6 tan( Float x ) Returns the tangent of an angle of x radians. Example: local.result = tan local.x Result: Tangent of x. Important This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - tan tanh \u00b6 tanh( Float x ) Returns the hyperbolic tangent of x. Example: local.result = tanh local.x Result: Hyperbolic tangent of x. Important This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - tanh Events \u00b6 ScriptThread -> Listener -> Class registerev \u00b6 registerev( String eventname, String scriptname ) Registers script callback handler for given event type. Example: local.result = registerev \"connected\" global/eventhandlers.scr::connected or local.result = registerev(\"connected\" global/eventhandlers.scr::connected) Result: When given even type will occur, EventSystem engine will execute given script. local.result can have one of the following values: 0 = Registering event callback handler was successful 1 = Event callback handler is already registered for given event 2 = Memory allocation error Please see Reborn Events System documentation for further information. unregisterev \u00b6 unregisterev( String eventname ) Unregisters script callback handler for given event type. Example: local.result = unregisterev \"connected\" or local.result = unregisterev(\"connected\") Result: EventSystem engine will unregister events of given type and won't execute their script callback handlers. local.result can have one of the following values: 0 = Unregistering event callback handler was successful 1 = Event callback handler is already unregistered Please see Reborn Events System documentation for further information. Date/Time \u00b6 ScriptThread -> Listener -> Class getdate \u00b6 getdate( String format ) Gets current date in format given as parameter. Example: local.date = getdate \"%D\" or local.date = getdate(\"%D\") Result: String with current date. 04/06/18 Formatting options: www.cplusplus.com/reference/ctime/strftime/ Max format length is 512 characters. gettime \u00b6 gettime( Integer zero ) Gets current time in format: H:M:S Example: local.time = gettime 0 or local.time = gettime(0) Result: String with current time. gettimezone \u00b6 gettimezone( Integer zero ) Gets current time zone. Example: local.timezone = gettimezone 0 or local.timezone = gettimezone(0) Result: Integer value that represents current time zone. eg. 2 = GMT +2 Miscellaneous \u00b6 ScriptThread -> Listener -> Class chartoint \u00b6 chartoint( String char ) Converts an ASCII character to its decimal equivalent and returns that as an integer value. Example: local.result = chartoint \"a\" Result: The decimal equivalent of \"a\" = 97 conprintf \u00b6 conprintf( String text ) Prints text to a console. Example: conprintf \"This can be a custom error message from the script\" or conprintf( \"This can be a custom error message from the script\" ) Result: Text will be printed to the console. getentity \u00b6 getentity( Integer entnum) Returns entity with given entity number Example: local.entity = getentity 0 or local.entity = getentity( 0 ) Entities with entity number between 0 and (sv_maxclients - 1) are reserved for players, and thus getentity 0 is equal to the client number 0 on the \"status\" list. md5file \u00b6 md5file( String filename ) Generates MD5 checksum of file with given filename Example: local.checksum = md5file local.filename Result: MD5 checksum as string. md5string \u00b6 md5string( String text ) Generates MD5 checksum of text Example: local.checksum = md5string local.text Result: MD5 checksum as string. stuffsrv \u00b6 stuffsrv( String s ) Sends command to server console. Example: stuffsrv \"restart\" stuffsrv( \"restart\" ) or stuffsrv \"map dm/mohdm1\" stuffsrv( \"map dm/mohdm1\" ) Result: Server will restart or Server will change map to dm/mohdm1 teamswitchdelay \u00b6 teamswitchdelay( Float time ) Sets the team switch delay time for all players. Example: teamswitchdelay 3 Result: Players have to wait 3 seconds until they can switch teams again traced \u00b6 traced( Vector start, Vector end, [Integer pass_entities], [Vecotr mins], [Vector maxs], [Integer mask]) Performs a ray trace from start origin to end origin. It takes optional arguments such as entity number to be ignored/skipped by the trace, mins and maxs of trace box and trace mask. Example: local.trace = traced local.start local.end or local.trace = traced local.start local.end local.pass_entities local.mins or local.trace = traced local.start local.end local.pass_entities local.mins local.maxs local.mask Result: Array holding detailed information about trace: local.trace[\"allSolid\"] - <i>Integer</i> : it tells wheter trace was inside of a solid object local.trace[\"startSolid\"] - <i>Integer</i> : it tells wheter trace started in solid object local.trace[\"fraction\"] - <i>Float</i> local.trace[\"endPos\"] - <i>Vector</i> : position where trace finished because it may finish before it reaches end point specified by caller when it hits object with specified mask before it reaches end point local.trace[\"surfaceFlags\"] - <i>Integer</i> local.trace[\"shaderNum\"] - <i>Integer</i> local.trace[\"contents\"] - <i>Integer</i> local.trace[\"entityNum\"] - <i>Integer</i> : entity number that was hit local.trace[\"location\"] - <i>Integer</i> local.trace[\"entity\"] - <i>Entity</i> : entity that was hit by the trace Surface Flags: Name Value SURF_NODAMAGE 1 SURF_SLICK 2 SURF_SKY 4 SURF_LADDER 8 SURF_NOIMPACT 16 SURF_NOMARKS 32 SURF_CASTSHADOW 64 SURF_PAPER 8192 SURF_WOOD 16384 SURF_METAL 32768 SURF_STONE 65536 SURF_DIRT 131072 SURF_METALGRILL 262144 SURF_GRASS 524288 SURF_MUD 1048576 SURF_PUDDLE 2097152 SURF_GLASS 4194304 SURF_GRAVEL 8388608 SURF_SAND 16777216 SURF_FOLIAGE 33554432 SURF_SNOW 67108864 SURF_CARPET 134217728 SURF_BACKSIDE 268435456 SURF_NODLIGHT 536870912 SURF_HINT 1073741824 Masks: Name Value MASK_SOLID 1 MASK_COLLISION 637537057 MASK_PERMANENTMARK 1073741825 MASK_AUTOCALCLIFE 1073750049 MASK_EXPLOSION 1074003969 MASK_TREADMARK 1107372801 MASK_THIRDPERSON 1107372857 MASK_FOOTSTEP 1107437825 MASK_BEAM 1107569409 MASK_VISIBLE 1107569409 MASK_VEHICLE 1107569409 MASK_BULLET 1107569441 MASK_SHOT 1107569569 MASK_CROSSHAIRSHADER 1107897089 MASK_TRACER 1108618017 Contents: Name Value CONTENTS_SOLID 1 CONTENTS_LAVA 8 CONTENTS_SLIME 16 CONTENTS_WATER 32 CONTENTS_FOG 64 CONTENTS_AREAPORTAL 32768 CONTENTS_PLAYERCLIP 65536 CONTENTS_MONSTERCLIP 131072 CONTENTS_WEAPONCLIP 262144 CONTENTS_SHOOTABLEONLY 1048576 CONTENTS_ORIGIN 16777216 CONTENTS_BODY 33554432 CONTENTS_CORPSE 67108864 CONTENTS_DETAIL 134217728 CONTENTS_STRUCTURAL 268435456 CONTENTS_TRANSLUCENT 536870912 CONTENTS_TRIGGER 1073741824 CONTENTS_NODROP 2147483648 typeof \u00b6 typeof( Variable var ) Gets the type of variable. Example: local.type = typeof local.var Result: The type of variable returned as string (array, string, vector, listener, ...)","title":"Extended scripting"},{"location":"features/modder/extended-scripting/#introduction","text":"Reborn patch has introduced a number of new scripting commands available for people to utilize in their mods.","title":"Introduction"},{"location":"features/modder/extended-scripting/#file-handlers","text":"ScriptThread -> Listener -> Class","title":"File Handlers"},{"location":"features/modder/extended-scripting/#fclose","text":"fclose( Integer filehandle ) Closes file. Example: local.return = fclose local.file or local.return = fclose(local.file) Result: If file is successfully closed, a zero value is returned. On failure, EOF is returned. Important You can open only 32 files at once. This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - fclose","title":"fclose"},{"location":"features/modder/extended-scripting/#fcopy","text":"fcopy( String filename, String copyname ) Creates a copy of file. Example: local.ret = fcopy local.filename local.copyname Result: If the file is successfully copied, a zero value is returned. When function fails to open original file, a -1 value is returned. When function fails to create a second file, a -2 value is returned. When function fails during data copy process, a -3 value is returned. Important You can open only 32 files at once.","title":"fcopy"},{"location":"features/modder/extended-scripting/#feof","text":"feof( Integer filehandle ) Checks for end of file. Example: local.return = feof local.file or local.return = feof(local.file) Result: A non-zero value is returned in the case that the End-of-File indicator associated with the file is set. Otherwise, a zero value is returned. Important You can open only 32 files at once. This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - feof","title":"feof"},{"location":"features/modder/extended-scripting/#ferror","text":"ferror( Integer filehandle ) Checks if the error indicator associated with file is set, returning a value different from zero if it is. Example: local.ret = ferror local.file or local.ret = ferror(local.file) Result: If the error indicator associated with the file was set, the function returns a nonzero value. Otherwise, it returns a zero value. Important You can open only 32 files at once. This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - ferror","title":"ferror"},{"location":"features/modder/extended-scripting/#fexists","text":"fexists( String filename ) Checks if file with given filename exists. Example: local.ret = fexists \"folder/folder2/file.txt\" or local.ret = fexists(\"folder/folder2/file.txt\") Result: If file exists, function returns 1. Otherwise it returns 0. Important You can open only 32 files at once.","title":"fexists"},{"location":"features/modder/extended-scripting/#fflush","text":"fflush( Integer filehandle ) If the given file was open for writing and the last i/o operation was an output operation, any unwritten data in the output buffer is written to the file. Note The file remains open after this command. Example: local.ret = fflush local.file or local.ret = fflush(local.file) Result: A zero value indicates success. If an error occurs, EOF is returned and the error indicator is set. Important You can open only 32 files at once. This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - fflush","title":"fflush"},{"location":"features/modder/extended-scripting/#fgetc","text":"fgetc( Integer filehandle ) Reads single character from file. Example: local.char = fgetc local.file or local.char = fgetc(local.file) Result: The character read is returned as an int value. You need to cast it to char if you want to use it in string. Important You can open only 32 files at once. This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - fgetc","title":"fgetc"},{"location":"features/modder/extended-scripting/#fgets","text":"fgets( Integer filehandle, Integer maxbuffsize ) Reads string line from file. Where: maxbuffsize specifies maximum buffer size that will be allocated to store the string in memory. Example: local.text = fgets local.file 256 or local.text = fgets(local.file 256) Result: If the End-of-File is encountered and no characters have been read 0 (null) is returned. If an error occurs 0 (null) is returned. If a memory allocation error occurs, -1 is returned. Important You can open only 32 files at once. This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - fgets","title":"fgets"},{"location":"features/modder/extended-scripting/#flist","text":"flist( String path, String extension, Integer scanSubDirectories ) Returns a list (array) of files with given extension located in given path. Function handles .pk3 folder structure and normal system directories. When scanSubDirectories equals 1, function will include subdirectories located under directory path. Extension needs to have \".\" (dot) included. Otherwise it will act as filter. Example: local.list = flist local.path local.extension local.scanSubDirectories Result: List with filenames and their paths found. Important You can open only 32 files at once.","title":"flist"},{"location":"features/modder/extended-scripting/#fnewdir","text":"fnewdir( String dirname ) Creates a new directory with given dirname Example: local.result = fnewdir \"main/new_folder\" Result: 0 = Success -1 = Error, directory already exists","title":"fnewdir"},{"location":"features/modder/extended-scripting/#fopen","text":"fopen( String filename, String accessType ) Opens file. Example: local.file = fopen \"main/config.txt\" \"a+\" or local.file = fopen(\"main/config.txt\" \"a+\") Result: Command returns file handle that is needed for identification and further operations on this file. Important You can open only 32 files at once. This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - fopen","title":"fopen"},{"location":"features/modder/extended-scripting/#fputc","text":"fputc( Integer filehandle, String character ) Writes a character to the file and advances the position indicator. Example: local.return = fputc local.file \"a\" or local.return = fputc(local.file \"a\") Result: If there are no errors, the same character that has been written is returned. If an error occurs, EOF is returned and the error indicator is set. You have to cast returned value to char. If you pass longer string, only first character will be written to file. Important You can open only 32 files at once. This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - fputc","title":"fputc"},{"location":"features/modder/extended-scripting/#fputs","text":"fputs( Integer filehandle, String text ) Writes text to the file and advances the position indicator. Example: local.return = fputs local.file \"This is example\" or local.return = fputs(local.file \"This is example\") Result: On success, a non-negative value is returned. On error, the function returns EOF. Important You can open only 32 files at once. This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - fputs","title":"fputs"},{"location":"features/modder/extended-scripting/#freadall","text":"freadall( Integer filehandle ) Reads whole file into a string at once. File has to be opened in binary mode (rb, rb+) Example: local.content = freadall local.file or local.content = freadall(local.file) Result: Function returns file content as string. Warning Don't read binary files with this function because it may cause memory leaks. Important You can open only 32 files at once.","title":"freadall"},{"location":"features/modder/extended-scripting/#freadpak","text":"freadpak( String filename ) Reads file located inside .pk3 file in text mode and returns it's content as string. Example: local.content = freadpak local.filename Result: If the file is successfully read, function returns a string with it's content. When function fails to find, open or read a file from .pk3, a -1 value is returned. Important You can open only 32 files at once.","title":"freadpak"},{"location":"features/modder/extended-scripting/#fremove","text":"fremove( String filename ) Removes the file with given filename. Example: local.ret = fremove local.filename Result: If the file is successfully deleted, a zero value is returned. On failure, a nonzero value is returned and the errno variable is set to the corresponding error code. Important You can open only 32 files at once. This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - remove","title":"fremove"},{"location":"features/modder/extended-scripting/#fremovedir","text":"fremovedir( String dirname ) Removes the directory with given dirname. Example: local.result = fremovedir \"main/subfolder\" Result: 0 = Success -1 = Error, directory doesn't exists or contains files in it","title":"fremovedir"},{"location":"features/modder/extended-scripting/#frename","text":"frename( String oldname, String newname ) Renames the file with given filename. Example: local.ret = frename local.oldname local.newname Result: If the file is successfully renamed, a zero value is returned. On failure, a nonzero value is returned and the errno variable is set to the corresponding error code. Important You can open only 32 files at once. This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - rename","title":"frename"},{"location":"features/modder/extended-scripting/#frewind","text":"frewind( Integer filehandle ) Sets the position indicator associated with file to the beginning of the file. Example: local.return = frewind local.file or local.return = frewind(local.file) Result: none Important You can open only 32 files at once. This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - rewind","title":"frewind"},{"location":"features/modder/extended-scripting/#fsaveall","text":"fsaveall( Integer filehandle, String content ) Writes string content to file at once. File has to be opened in binary mode (wb, wb+, ab). The content will start to be saved from the current file position. Example: local.ret = fsaveall local.file local.content Result: Function returns number of character written to file or -1 if content is NULL. Important You can open only 32 files at once.","title":"fsaveall"},{"location":"features/modder/extended-scripting/#fseek","text":"fseek( Integer filehandle, Integer offset, Integer origin ) Sets the position indicator associated with the file to a new position defined by adding offset to a reference position specified by origin. Example: local.return = fseek local.file 154 0 or local.return = fseek(local.file 154 0) Where origin: 0 = SEEK_SET 1 = SEEK_CUR 2 = SEEK_END Result: If successful, the function returns a zero value. Otherwise, it returns nonzero value. Important You can open only 32 files at once. This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - fseek","title":"fseek"},{"location":"features/modder/extended-scripting/#ftell","text":"ftell( Integer filehandle ) Returns the current value of the position indicator of the file. Example: local.return = ftell local.file or local.return = ftell(local.file) Result: On success, the current value of the position indicator is returned. If an error occurs, -1 is returned. Important You can open only 32 files at once. This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - ftell","title":"ftell"},{"location":"features/modder/extended-scripting/#ihuddraws","text":"ScriptThread -> Listener -> Class","title":"iHuddraws"},{"location":"features/modder/extended-scripting/#ihuddraw_align","text":"ihuddraw_align( Entity player, Integer index, String h_align, String v_align ) Sets the alignment of a huddraw element for individual player. Where: h_align = \"left\", \"center\", \"right\" v_align = \"bottom\", \"center\", \"top\" index = index of huddraw element to be set player = entity of player that will have his huddraw element set Example: ihuddraw_align $player[1] 15 right top or ihuddraw_align( $player[1] 15 \"right\" \"top\" )","title":"ihuddraw_align"},{"location":"features/modder/extended-scripting/#ihuddraw_alpha","text":"ihuddraw_alpha( Entity player, Integer index, Float alpha ) Sets the alpha of a huddraw element for individual player. Where: index = index of huddraw element to be set player = entity of player that will have his huddraw element set Example: ihuddraw_alpha $player[1] 15 1 or ihuddraw_alpha( $player[1] 15 1 )","title":"ihuddraw_alpha"},{"location":"features/modder/extended-scripting/#ihuddraw_color","text":"ihuddraw_color( Entity player, Integer index, Float red, Float green, Float blue ) Sets the color for a huddraw element for individual player. Where: index = index of huddraw element to be set player = entity of player that will have his huddraw element set Example: ihuddraw_color $player[1] 15 1 1 1 or ihuddraw_color( $player[1] 15 1 1 1 )","title":"ihuddraw_color"},{"location":"features/modder/extended-scripting/#ihuddraw_font","text":"ihuddraw_font( Entity player, Integer index, String fontname ) Sets the font to use for a huddraw element, for individual player. Where: index = index of huddraw element to be set player = entity of player that will have his huddraw element set Example: ihuddraw_font $player[1] 15 \"verdana-14\" or ihuddraw_font( $player[1] 15 \"verdana-14\" )","title":"ihuddraw_font"},{"location":"features/modder/extended-scripting/#ihuddraw_rect","text":"ihuddraw_rect( Entity player, Integer index, Integer x, Integer y, Integer width, Integer height ) Specifies the position of the upper left corner and size of a huddraw element for individual player Where: index = index of huddraw element to be set player = entity of player that will have his huddraw element set Example: ihuddraw_rect $player[1] 15 -140 65 0 0 or ihuddraw_rect( $player[1] 15 -140 65 0 0 )","title":"ihuddraw_rect"},{"location":"features/modder/extended-scripting/#ihuddraw_shader","text":"ihuddraw_shader( Entity player, Integer index, String shader ) Sets the shader to use for a particular huddraw element for individual player Where: index = index of huddraw element to be set player = entity of player that will have his huddraw element set Example: ihuddraw_shader $player[1] 15 \"textures/hud/axis\" or ihuddraw_shader( $player[1] 15 \"textures/hud/axis\" )","title":"ihuddraw_shader"},{"location":"features/modder/extended-scripting/#ihuddraw_string","text":"ihuddraw_string( Entity player, Integer index, String string ) Sets a string to be displayed. Clears the shader value of huddraw element for individual player Where: index = index of huddraw element to be set player = entity of player that will have his huddraw element set Example: ihuddraw_string $player[1] 15 \"I luv Reborn 1.12 Patch!\" or ihuddraw_string( $player[1] 15 \"I luv Reborn 1.12 Patch!\" )","title":"ihuddraw_string"},{"location":"features/modder/extended-scripting/#ihuddraw_virtualsize","text":"ihuddraw_virtualsize( Entity player, Integer index, Integer virtual ) Sets if the huddraw element (for individual player) should use virutal screen resolution for positioning and size. Where: index = index of huddraw element to be set player = entity of player that will have his huddraw element set Example: ihuddraw_virtualsize $player[1] 15 1 or ihuddraw_virtualsize( $player[1] 15 1 )","title":"ihuddraw_virtualsize"},{"location":"features/modder/extended-scripting/#player","text":"ScriptThread -> Listener -> Class","title":"Player"},{"location":"features/modder/extended-scripting/#getclientnum","text":"getclientnum( Entity player ) Gets player's client number and returns it as integer. Example: local.player_clnum = getclientnum $player[1] or local.player_clnum = getclientnum( $player[1] )","title":"getclientnum"},{"location":"features/modder/extended-scripting/#getip","text":"getip( Entity player ) Gets player's ip address with port and returns it as string. Example: local.player_ip = getip $player[1] or local.player_ip = getip( $player[1] ) Result: 127.0.0.1:12203","title":"getip"},{"location":"features/modder/extended-scripting/#getping","text":"getping( Entity player ) Gets player's ping and returns it as integer. Example: local.player_ping = getping $player[1] or local.player_ping = getping( $player[1] )","title":"getping"},{"location":"features/modder/extended-scripting/#netname","text":"netname( Entity player ) Gets player's name and returns it as string. Example: local.player_name = netname $player[1] or local.player_name = netname( $player[1] )","title":"netname"},{"location":"features/modder/extended-scripting/#player_1","text":"Player (player) -> Sentient -> Animate -> Entity -> SimpleEntity -> Listener -> Class","title":"Player"},{"location":"features/modder/extended-scripting/#adddeaths","text":"adddeaths( Integer deaths ) Adds number of deaths to player. (Can be also negative) Example: $player[1] adddeaths 5 or $player[1] adddeaths -5 Result: If player had 8 deaths, he will have 13 deaths or If player had 8 deaths, he will have 3 deaths","title":"adddeaths"},{"location":"features/modder/extended-scripting/#addkills","text":"addkills( Integer kills ) Adds number of kills to player. (Can be also negative) Example: $player[1] addkills 5 or $player[1] addkills -5 Result: If player had 8 kills, he will have 13 kills or If player had 8 kills, he will have 3 kills","title":"addkills"},{"location":"features/modder/extended-scripting/#adminrights","text":".adminrights( void ) Gets the admin rights of the player ( Reborn ClientAdmin System ). Example: local.result = $player[1].adminrights Result: Returns the numeric value of the player's admin permissions Returns 0 if the player is not logged in as admin","title":".adminrights"},{"location":"features/modder/extended-scripting/#bindweap","text":"bindweap( Entity weapon ) Binds weapon to player. Sets him as weapon owner. 2nd use of the command will unbind the weapon from player. Example: $player[1] bindweap local.weapon local.weapon anim fire $player[1] bindweap local.weapon Result: Sets player as weapon owner. Warning This is sort of a hack&trick scripting command. It should only be used by experienced users and only like shown in the example - just before firing the weapon and just after, to unbind it from the player. Otherwise you can have errors, weapon model glued to player, or server crashes. It should be used only for some kind of remote turrets etc.","title":"bindweap"},{"location":"features/modder/extended-scripting/#getactiveweap","text":"getactiveweap( Integer weaponhand ) Gets currently active weapon from player's hand of given index Example: local.weapon = $player[1] getactiveweap 0 or local.weapon = $player[1] getactiveweap(0) Result: Weapon entity. Important You can use weaponhand index from 0-2 range, but it's preffered to use only 0 index, because other indexes my return false values that might crash server","title":"getactiveweap"},{"location":"features/modder/extended-scripting/#getconnstate","text":"getconnstate( void ) Gets state of player's connection. Example: local.connection_state = $player[1] getconnstate or local.connection_state = $player[1] getconnstate( ) Result: Returns integer value: 0 = CS_FREE - given player slot is free 1 = CS_ZOMBIE - given player slot is in zombie state (his data is still kept after he disconnected or lost connection) 2 = CS_CONNECTED - player has connected to server, but he's not yet in the game 3 = CS_PRIMED - player has passed through authorization checks and finished downloading any missing files 4 = CS_ACTIVE - player is in game and can start playing","title":"getconnstate"},{"location":"features/modder/extended-scripting/#getdeaths","text":"getdeaths( void ) Gets number of player's deaths and returns it as integer. Example: local.player_deaths = $player[1] getdeaths or local.player_deaths = $player[1] getdeaths( ) Result: Number of player's deaths. Important Before using this function, check game type that is currently running. When g_gametype is 3 or 4, deaths aren't counted and result of this function will equal to kills amount that player has","title":"getdeaths"},{"location":"features/modder/extended-scripting/#getkills","text":"getkills( void ) Gets number of player's kills and returns it as integer Example: local.player_kills = $player[1] getkills or local.player_kills = $player[1] getkills( ) Result: Number of players that this player has killed.","title":"getkills"},{"location":"features/modder/extended-scripting/#inventory","text":".inventory( void ) Returns player's inventory Example: local.inventory= $player[1].inventory local.inventorySize = $player[1].inventory.size local.item1 = $player[1].inventory[0] Result: Array with entities in player's inventory. You can assign it to a variable or access directly.","title":".inventory"},{"location":"features/modder/extended-scripting/#isadmin","text":"isadmin( void ) Checks if player is currently logged in as server administrator. Example: local.admin = $player[1] isadmin or local.admin = $player[1] isadmin( ) Result: Returns 1 if player is logged in as administrator, otherwise it returns 0.","title":"isadmin"},{"location":"features/modder/extended-scripting/#leanleftheld","text":".leanleftheld( void ) Returns 1 if player is leaning left. Otherwise returns 0. Example: if ( $player[1].leanleftheld ) ... Result: 1 = player is leaning left 0 = player is not leaning left","title":".leanleftheld"},{"location":"features/modder/extended-scripting/#leanrightheld","text":".leanrightheld( void ) Returns 1 if player is leaning right. Otherwise returns 0. Example: if ( $player[1].leanrightheld ) ... Result: 1 = player is leaning right 0 = player is not leaning right","title":".leanrightheld"},{"location":"features/modder/extended-scripting/#runheld","text":".runheld( void ) Returns 1 if player is not walking/holding the left shift key (+speed). Otherwise returns 0. Example: if ( $player[1].runheld ) ... Result: 1 = player is not holding the left shift key (+speed) 0 = player is holding the left shift key (+speed) Important This command works different than the getmovement command, it doesn't check the running state of the player. It will return 1 even is the player is in spectator mode","title":".runheld"},{"location":"features/modder/extended-scripting/#secfireheld","text":".secfireheld( void ) Returns 1 if player is holding secondary fire button. Example: if( $player[1].secfireheld == 1 ) ... Result: 1 = player is holding secondary fire button 0 = opposite","title":".secfireheld"},{"location":"features/modder/extended-scripting/#userinfo","text":".userinfo( void ) Returns player's userinfo Example: local.userinfo = $player[1].userinfo Result: String with player's userinfo","title":".userinfo"},{"location":"features/modder/extended-scripting/#maths","text":"ScriptThread -> Listener -> Class","title":"Maths"},{"location":"features/modder/extended-scripting/#acos","text":"acos( Float x ) Returns the principal value of the arc cosine of x, expressed in radians. Example: local.result = acos local.x Result: Floating point value in the interval [-1,+1]. Important This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - acos","title":"acos"},{"location":"features/modder/extended-scripting/#asin","text":"asin( Float x ) Returns the principal value of the arc sine of x, expressed in radians. Example: local.result = asin local.x Result: Floating point value in the interval [-1,+1]. Important This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - asin","title":"asin"},{"location":"features/modder/extended-scripting/#atan","text":"atan( Float x ) Returns the principal value of the arc tangent of x, expressed in radians. Notice that because of the sign ambiguity, a function cannot determine with certainty in which quadrant the angle falls only by its tangent value. You can use atan2 if you need to determine the quadrant. Example: local.result = atan local.x Result: Principal arc tangent of x, in the interval [-pi/2,+pi/2] radians. Important This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - atan","title":"atan"},{"location":"features/modder/extended-scripting/#atan2","text":"atan2( Float y, [I]Float[I] x ) Returns the principal value of the arc tangent of y/x, expressed in radians. To compute the value, the function uses the sign of both arguments to determine the quadrant. Example: local.result = atan2 local.y local.x Result: Principal arc tangent of y/x, in the interval [-pi,+pi] radians. Important This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - atan2","title":"atan2"},{"location":"features/modder/extended-scripting/#ceil","text":"ceil( Float x ) Returns the smallest integral value that is not less than x. Example: local.result = ceil local.x Result: The smallest integral value not less than x. Important This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - ceil","title":"ceil"},{"location":"features/modder/extended-scripting/#cos","text":"cos( Float x ) Returns the cosine of an angle of x radians. Example: local.result = cos local.x Result: Cosine of x. Important This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - cos","title":"cos"},{"location":"features/modder/extended-scripting/#cosh","text":"cosh( Float x ) Returns the hyperbolic cosine of x. Example: local.result = cosh local.x Result: Hyperbolic cosine of x. Important This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - cosh","title":"cosh"},{"location":"features/modder/extended-scripting/#exp","text":"exp( Float x ) Returns the base-e exponential function of x, which is the e number raised to the power x. Example: local.result = exp local.x Result: Exponential value of x. Important This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - exp","title":"exp"},{"location":"features/modder/extended-scripting/#floor","text":"floor( Float x ) Returns the largest integral value that is not greater than x. Example: local.result = floor local.x Result: The largest integral value not greater than x. Important This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - floor","title":"floor"},{"location":"features/modder/extended-scripting/#fmod","text":"fmod( Float numerator, Float denominator ) Returns the floating-point remainder of numerator/denominator. The remainder of a division operation is the result of subtracting the integral quotient multiplied by the denominator from the numerator: remainder = numerator - quotient * denominator Example: local.result = fmod local.numerator local.denominator Result: The remainder of dividing the arguments. Important This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - fmod","title":"fmod"},{"location":"features/modder/extended-scripting/#frexp","text":"frexp( Float x ) Breaks the floating point number x into its binary significand (a floating point value between 0.5(included) and 1.0(excluded)) and an integral exponent for 2, such that: x = significand * 2exponent If x is zero, both parts (significand and exponent) are zero. Example: local.result = frexp local.x Result: local.result[\"significand\"] - significand part local.result[\"exponent\"] - exponent part Important This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - frexp","title":"frexp"},{"location":"features/modder/extended-scripting/#ldexp","text":"ldexp( Float x, Integer exponent ) Returns the resulting floating point value from multiplying x (the significand) by 2 raised to the power of exp (the exponent). Example: local.result = ldexp local.x local.exponent Result: The function returns float number: x * 2<sup>exp</sup> Important This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - ldexp","title":"ldexp"},{"location":"features/modder/extended-scripting/#log","text":"log( Float x ) Returns the natural logarithm of x. The natural logarithm is the base-e logarithm, the inverse of the natural exponential function (exp). For base-10 logarithms, a specific function log10 exists. Example: local.result = log local.x Result: Natural logarithm of x. Important This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - log","title":"log"},{"location":"features/modder/extended-scripting/#log10","text":"log10( Float x ) Returns the common (base-10) logarithm of x. Example: local.result = log10 local.x Result: Common logarithm of x, for values of x greater than zero. Important This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - log10","title":"log10"},{"location":"features/modder/extended-scripting/#modf","text":"modf( Float x ) Breaks x into two parts: the integer part and the fractional part. Example: local.result = modf local.x Result: local.result[\"intpart\"] - integer part local.result[\"fractional\"] - fractional part Important This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - modf","title":"modf"},{"location":"features/modder/extended-scripting/#pow","text":"pow( Float x, Integer exponent ) Returns base raised to the power exponent: baseexponent Example: local.result = pow local.x local.exponent Result: The result of raising base to the power exponent. Important This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - pow","title":"pow"},{"location":"features/modder/extended-scripting/#sin","text":"sin( Float x ) Returns the sine of an angle of x radians. Example: local.result = sin local.x Result: Sine of x. Important This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - sin","title":"sin"},{"location":"features/modder/extended-scripting/#sinh","text":"sinh( Float x ) Returns the hyperbolic sine of x. Example: local.result = sinh local.x Result: Hyperbolic sine of x. Important This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - sinh","title":"sinh"},{"location":"features/modder/extended-scripting/#sqrt","text":"sqrt( Float x ) Returns the square root of x. Example: local.result = sqrt local.x Result: Square root of x. Important This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - sqrt","title":"sqrt"},{"location":"features/modder/extended-scripting/#tan","text":"tan( Float x ) Returns the tangent of an angle of x radians. Example: local.result = tan local.x Result: Tangent of x. Important This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - tan","title":"tan"},{"location":"features/modder/extended-scripting/#tanh","text":"tanh( Float x ) Returns the hyperbolic tangent of x. Example: local.result = tanh local.x Result: Hyperbolic tangent of x. Important This command works exactly like ANSI C function. For further documentation, please visit: ANSI C - tanh","title":"tanh"},{"location":"features/modder/extended-scripting/#events","text":"ScriptThread -> Listener -> Class","title":"Events"},{"location":"features/modder/extended-scripting/#registerev","text":"registerev( String eventname, String scriptname ) Registers script callback handler for given event type. Example: local.result = registerev \"connected\" global/eventhandlers.scr::connected or local.result = registerev(\"connected\" global/eventhandlers.scr::connected) Result: When given even type will occur, EventSystem engine will execute given script. local.result can have one of the following values: 0 = Registering event callback handler was successful 1 = Event callback handler is already registered for given event 2 = Memory allocation error Please see Reborn Events System documentation for further information.","title":"registerev"},{"location":"features/modder/extended-scripting/#unregisterev","text":"unregisterev( String eventname ) Unregisters script callback handler for given event type. Example: local.result = unregisterev \"connected\" or local.result = unregisterev(\"connected\") Result: EventSystem engine will unregister events of given type and won't execute their script callback handlers. local.result can have one of the following values: 0 = Unregistering event callback handler was successful 1 = Event callback handler is already unregistered Please see Reborn Events System documentation for further information.","title":"unregisterev"},{"location":"features/modder/extended-scripting/#datetime","text":"ScriptThread -> Listener -> Class","title":"Date/Time"},{"location":"features/modder/extended-scripting/#getdate","text":"getdate( String format ) Gets current date in format given as parameter. Example: local.date = getdate \"%D\" or local.date = getdate(\"%D\") Result: String with current date. 04/06/18 Formatting options: www.cplusplus.com/reference/ctime/strftime/ Max format length is 512 characters.","title":"getdate"},{"location":"features/modder/extended-scripting/#gettime","text":"gettime( Integer zero ) Gets current time in format: H:M:S Example: local.time = gettime 0 or local.time = gettime(0) Result: String with current time.","title":"gettime"},{"location":"features/modder/extended-scripting/#gettimezone","text":"gettimezone( Integer zero ) Gets current time zone. Example: local.timezone = gettimezone 0 or local.timezone = gettimezone(0) Result: Integer value that represents current time zone. eg. 2 = GMT +2","title":"gettimezone"},{"location":"features/modder/extended-scripting/#miscellaneous","text":"ScriptThread -> Listener -> Class","title":"Miscellaneous"},{"location":"features/modder/extended-scripting/#chartoint","text":"chartoint( String char ) Converts an ASCII character to its decimal equivalent and returns that as an integer value. Example: local.result = chartoint \"a\" Result: The decimal equivalent of \"a\" = 97","title":"chartoint"},{"location":"features/modder/extended-scripting/#conprintf","text":"conprintf( String text ) Prints text to a console. Example: conprintf \"This can be a custom error message from the script\" or conprintf( \"This can be a custom error message from the script\" ) Result: Text will be printed to the console.","title":"conprintf"},{"location":"features/modder/extended-scripting/#getentity","text":"getentity( Integer entnum) Returns entity with given entity number Example: local.entity = getentity 0 or local.entity = getentity( 0 ) Entities with entity number between 0 and (sv_maxclients - 1) are reserved for players, and thus getentity 0 is equal to the client number 0 on the \"status\" list.","title":"getentity"},{"location":"features/modder/extended-scripting/#md5file","text":"md5file( String filename ) Generates MD5 checksum of file with given filename Example: local.checksum = md5file local.filename Result: MD5 checksum as string.","title":"md5file"},{"location":"features/modder/extended-scripting/#md5string","text":"md5string( String text ) Generates MD5 checksum of text Example: local.checksum = md5string local.text Result: MD5 checksum as string.","title":"md5string"},{"location":"features/modder/extended-scripting/#stuffsrv","text":"stuffsrv( String s ) Sends command to server console. Example: stuffsrv \"restart\" stuffsrv( \"restart\" ) or stuffsrv \"map dm/mohdm1\" stuffsrv( \"map dm/mohdm1\" ) Result: Server will restart or Server will change map to dm/mohdm1","title":"stuffsrv"},{"location":"features/modder/extended-scripting/#teamswitchdelay","text":"teamswitchdelay( Float time ) Sets the team switch delay time for all players. Example: teamswitchdelay 3 Result: Players have to wait 3 seconds until they can switch teams again","title":"teamswitchdelay"},{"location":"features/modder/extended-scripting/#traced","text":"traced( Vector start, Vector end, [Integer pass_entities], [Vecotr mins], [Vector maxs], [Integer mask]) Performs a ray trace from start origin to end origin. It takes optional arguments such as entity number to be ignored/skipped by the trace, mins and maxs of trace box and trace mask. Example: local.trace = traced local.start local.end or local.trace = traced local.start local.end local.pass_entities local.mins or local.trace = traced local.start local.end local.pass_entities local.mins local.maxs local.mask Result: Array holding detailed information about trace: local.trace[\"allSolid\"] - <i>Integer</i> : it tells wheter trace was inside of a solid object local.trace[\"startSolid\"] - <i>Integer</i> : it tells wheter trace started in solid object local.trace[\"fraction\"] - <i>Float</i> local.trace[\"endPos\"] - <i>Vector</i> : position where trace finished because it may finish before it reaches end point specified by caller when it hits object with specified mask before it reaches end point local.trace[\"surfaceFlags\"] - <i>Integer</i> local.trace[\"shaderNum\"] - <i>Integer</i> local.trace[\"contents\"] - <i>Integer</i> local.trace[\"entityNum\"] - <i>Integer</i> : entity number that was hit local.trace[\"location\"] - <i>Integer</i> local.trace[\"entity\"] - <i>Entity</i> : entity that was hit by the trace Surface Flags: Name Value SURF_NODAMAGE 1 SURF_SLICK 2 SURF_SKY 4 SURF_LADDER 8 SURF_NOIMPACT 16 SURF_NOMARKS 32 SURF_CASTSHADOW 64 SURF_PAPER 8192 SURF_WOOD 16384 SURF_METAL 32768 SURF_STONE 65536 SURF_DIRT 131072 SURF_METALGRILL 262144 SURF_GRASS 524288 SURF_MUD 1048576 SURF_PUDDLE 2097152 SURF_GLASS 4194304 SURF_GRAVEL 8388608 SURF_SAND 16777216 SURF_FOLIAGE 33554432 SURF_SNOW 67108864 SURF_CARPET 134217728 SURF_BACKSIDE 268435456 SURF_NODLIGHT 536870912 SURF_HINT 1073741824 Masks: Name Value MASK_SOLID 1 MASK_COLLISION 637537057 MASK_PERMANENTMARK 1073741825 MASK_AUTOCALCLIFE 1073750049 MASK_EXPLOSION 1074003969 MASK_TREADMARK 1107372801 MASK_THIRDPERSON 1107372857 MASK_FOOTSTEP 1107437825 MASK_BEAM 1107569409 MASK_VISIBLE 1107569409 MASK_VEHICLE 1107569409 MASK_BULLET 1107569441 MASK_SHOT 1107569569 MASK_CROSSHAIRSHADER 1107897089 MASK_TRACER 1108618017 Contents: Name Value CONTENTS_SOLID 1 CONTENTS_LAVA 8 CONTENTS_SLIME 16 CONTENTS_WATER 32 CONTENTS_FOG 64 CONTENTS_AREAPORTAL 32768 CONTENTS_PLAYERCLIP 65536 CONTENTS_MONSTERCLIP 131072 CONTENTS_WEAPONCLIP 262144 CONTENTS_SHOOTABLEONLY 1048576 CONTENTS_ORIGIN 16777216 CONTENTS_BODY 33554432 CONTENTS_CORPSE 67108864 CONTENTS_DETAIL 134217728 CONTENTS_STRUCTURAL 268435456 CONTENTS_TRANSLUCENT 536870912 CONTENTS_TRIGGER 1073741824 CONTENTS_NODROP 2147483648","title":"traced"},{"location":"features/modder/extended-scripting/#typeof","text":"typeof( Variable var ) Gets the type of variable. Example: local.type = typeof local.var Result: The type of variable returned as string (array, string, vector, listener, ...)","title":"typeof"},{"location":"features/player/player-voting/","text":"Player voting \u00b6 MoH:AA/SH/BT is known to have broken voting system. It's rarely used by server admins and players. Reborn introduces new, upgraded vote system, that server admins and players can use to build servers that take players will into consideration. If server admin has enabled player voting on his server, you can cast new votes and vote to propose a change in server settings to other players. To cast a vote, you need to use callvote command in your game console as follows: callvote <command> Info You can open your game console by hitting tilde (~) on your keyboard while being connected to the server. This is exactly the same way you would create votes on non-Reborn servers. What's different is that once you create a vote, all players will see summary of the vote in the bottom left corner of the screen. The vote summary consists of: Command that will be executed on the sever once the voting passes Percentage of \"No\" votes Percentage of \"Yes\" votes Time left until voting ends Other players can vote \"yes\" or \"no\" by sending command from their game console: vote yes or vote no Once the vote passed - the proposed command will be executed on server. Note Server admin can limit what commands can be used in voting on the server. If server owner allowed to vote for map changes with map or gamemap commands, you can call a vote for a map change like so: callvote map dm/mohmdm6 However, server admin can control what maps are allowed for voting. For example - if server is OBJ only, server admin might want to limit maps available for voting only to those that support OBJ gameplay. To know what maps you can use in votes, you can type allowedmaps command in your game console.","title":"Player voting"},{"location":"features/player/player-voting/#player-voting","text":"MoH:AA/SH/BT is known to have broken voting system. It's rarely used by server admins and players. Reborn introduces new, upgraded vote system, that server admins and players can use to build servers that take players will into consideration. If server admin has enabled player voting on his server, you can cast new votes and vote to propose a change in server settings to other players. To cast a vote, you need to use callvote command in your game console as follows: callvote <command> Info You can open your game console by hitting tilde (~) on your keyboard while being connected to the server. This is exactly the same way you would create votes on non-Reborn servers. What's different is that once you create a vote, all players will see summary of the vote in the bottom left corner of the screen. The vote summary consists of: Command that will be executed on the sever once the voting passes Percentage of \"No\" votes Percentage of \"Yes\" votes Time left until voting ends Other players can vote \"yes\" or \"no\" by sending command from their game console: vote yes or vote no Once the vote passed - the proposed command will be executed on server. Note Server admin can limit what commands can be used in voting on the server. If server owner allowed to vote for map changes with map or gamemap commands, you can call a vote for a map change like so: callvote map dm/mohmdm6 However, server admin can control what maps are allowed for voting. For example - if server is OBJ only, server admin might want to limit maps available for voting only to those that support OBJ gameplay. To know what maps you can use in votes, you can type allowedmaps command in your game console.","title":"Player voting"},{"location":"features/server-admin/accounts-and-permissions/","text":"Managing admin accounts \u00b6 Permissions \u00b6 Not all actions, that your admins can perform, come with equal consequences. While some of them are hard to misuse, others can give ultimate power. This is why you have to assign appropriate privileges to every admin account, which tell what commands given admin is permitted to issue on the server. Each permission controls selected commands, and you can fine-tune what given admin account can do, by combining those permissions. List of available permissions \u00b6 Name Numeric Value Allowed commands Description ACCESSLEVEL_PROTECTNAME 1 ad_protname, ad_unprotname, ad_listprotnames One can protect/unprotect and list protected names ACCESSLEVEL_MAPCHANGE 2 ad_map One can change maps ACCESSLEVEL_RESTART 4 ad_restart One can restart the game ACCESSLEVEL_GAMETYPE 8 ad_gametype One can change gametype ACCESSLEVEL_FRAGLIMIT 16 ad_fraglimit One can change frag limit ACCESSLEVEL_TIMELIMIT 16 ad_timelimit One can change time limit ACCESSLEVEL_KICK 32 ad_kick, ad_kickr, ad_clientkick, ad_clientkickr One can kick players from game ACCESSLEVEL_BADCMD 64 wuss, tele, noclip, dog One can use bad commands, for admin debug/scripting purposes ACCESSLEVEL_BAN 128 ad_banip, ad_banipr, ad_banid, ad_banidr, ad_banname, ad_listips, ad_listnames One can ban and list players IPs/names ACCESSLEVEL_REMOVEBAN 256 ad_unbanip, ad_unbanname, ad_listips, ad_listnames One can unban and list players IPs/names ACCESSLEVEL_CHATFILTER 512 ad_chatfilteradd, ad_chatfilterremove, ad_listchatfilter, ad_dischat One can add/remove/list words in chat filters list and disable players chat ACCESSLEVEL_ADMINPROCMD 1024 Not used Unused in this version ACCESSLEVEL_LISTADMINS 2048 ad_listadmins One can view a list of ClientAdmins ACCESSLEVEL_RCON 4096 ad_rcon One can have a full access to RCon console ACCESSLEVEL_MAX 16383 All above commands One has all rights Creating, editing and deleting accounts \u00b6 Reborn patch uses admin.ini file to store admin accounts credentials. To create new accounts, edit or delete existing ones, you have to edit this file with text editor of your choice (for example Windows Notepad). They are loaded during patch initialization which happens on each map change and during first game server startup. Each account has to be represented as new line in the file. It consists of account login, password and access level which determines account privileges. The template looks as follows: login= password= rights= Below is admins.ini file example, which defines 2 admin accounts with different rights: login=->|ClanTag|<- MyName password=mySeCrEt rights=16383 login=test password=another_password rights=1 Note Don\u2019t use TAB\u2019s to make spaces between login, password, rights. Instead use spaces. Engine can handle TAB\u2019s but it\u2019s more safe to use spaces. Combining permissions \u00b6 You can combine several permissions which you want to give to admin account, by taking numeric values assigned to each permission and adding them together. For example, if we want to create new admin account with permissions to use commands: ad_restart ad_map ad_kick, ad_kickr, ad_clientkick, ad_clientkickr We take numeric values of permissions: ACCESSLEVEL_RESTART: 4 ACCESSLEVEL_MAPCHANGE: 2 ACCESSLEVEL_KICK: 32 and add them toghether: 4 + 2 + 32 = 38 Then we create new entry in admins.ini file: login=chris123 password=mySuperSecretPassw0rd! rights=38 Managing server using admin account \u00b6 Logging-in \u00b6 Connect to the server with your game client, by joining to the game as regular player. Then open your game console (use tilde '~' on your keyboard) and type the following command: ad_login <login> <password> for example: ad_login chris123 mySuperSecretPassw0rd! Based on validity of provided credentials, you will receive one of two possible messages: \"Admin System> You have been authed as admin\" \"USAGE: ad_login - wrong login or password. Please try again.\" Once you've successfully authenticated yourself, you will remain logged-in until you disconnect from the server. Issuing commands \u00b6 Once you have successfully logged-in to your admin account, you can start issuing commands. All server admin commands start with ad_ prefix. Open your game console during gameplay and simply type a command, for example: ad_status . You will see result of executing the command in your console. If you are not logged-in to your admin account or don't have enough permissions, you will receive appropriate information. Server audit \u00b6 Sometimes you want to make an audit and investigate who issued what commands and from which admin account. It is possible to do this by configuring your server to include such information in server logs. You have to add +set developer 2 to your server command-line startup script. Note There can be a difference in what information is logged based on OS (Windows vs Linux).","title":"Admin accounts and permissions"},{"location":"features/server-admin/accounts-and-permissions/#managing-admin-accounts","text":"","title":"Managing admin accounts"},{"location":"features/server-admin/accounts-and-permissions/#permissions","text":"Not all actions, that your admins can perform, come with equal consequences. While some of them are hard to misuse, others can give ultimate power. This is why you have to assign appropriate privileges to every admin account, which tell what commands given admin is permitted to issue on the server. Each permission controls selected commands, and you can fine-tune what given admin account can do, by combining those permissions.","title":"Permissions"},{"location":"features/server-admin/accounts-and-permissions/#list-of-available-permissions","text":"Name Numeric Value Allowed commands Description ACCESSLEVEL_PROTECTNAME 1 ad_protname, ad_unprotname, ad_listprotnames One can protect/unprotect and list protected names ACCESSLEVEL_MAPCHANGE 2 ad_map One can change maps ACCESSLEVEL_RESTART 4 ad_restart One can restart the game ACCESSLEVEL_GAMETYPE 8 ad_gametype One can change gametype ACCESSLEVEL_FRAGLIMIT 16 ad_fraglimit One can change frag limit ACCESSLEVEL_TIMELIMIT 16 ad_timelimit One can change time limit ACCESSLEVEL_KICK 32 ad_kick, ad_kickr, ad_clientkick, ad_clientkickr One can kick players from game ACCESSLEVEL_BADCMD 64 wuss, tele, noclip, dog One can use bad commands, for admin debug/scripting purposes ACCESSLEVEL_BAN 128 ad_banip, ad_banipr, ad_banid, ad_banidr, ad_banname, ad_listips, ad_listnames One can ban and list players IPs/names ACCESSLEVEL_REMOVEBAN 256 ad_unbanip, ad_unbanname, ad_listips, ad_listnames One can unban and list players IPs/names ACCESSLEVEL_CHATFILTER 512 ad_chatfilteradd, ad_chatfilterremove, ad_listchatfilter, ad_dischat One can add/remove/list words in chat filters list and disable players chat ACCESSLEVEL_ADMINPROCMD 1024 Not used Unused in this version ACCESSLEVEL_LISTADMINS 2048 ad_listadmins One can view a list of ClientAdmins ACCESSLEVEL_RCON 4096 ad_rcon One can have a full access to RCon console ACCESSLEVEL_MAX 16383 All above commands One has all rights","title":"List of available permissions"},{"location":"features/server-admin/accounts-and-permissions/#creating-editing-and-deleting-accounts","text":"Reborn patch uses admin.ini file to store admin accounts credentials. To create new accounts, edit or delete existing ones, you have to edit this file with text editor of your choice (for example Windows Notepad). They are loaded during patch initialization which happens on each map change and during first game server startup. Each account has to be represented as new line in the file. It consists of account login, password and access level which determines account privileges. The template looks as follows: login= password= rights= Below is admins.ini file example, which defines 2 admin accounts with different rights: login=->|ClanTag|<- MyName password=mySeCrEt rights=16383 login=test password=another_password rights=1 Note Don\u2019t use TAB\u2019s to make spaces between login, password, rights. Instead use spaces. Engine can handle TAB\u2019s but it\u2019s more safe to use spaces.","title":"Creating, editing and deleting accounts"},{"location":"features/server-admin/accounts-and-permissions/#combining-permissions","text":"You can combine several permissions which you want to give to admin account, by taking numeric values assigned to each permission and adding them together. For example, if we want to create new admin account with permissions to use commands: ad_restart ad_map ad_kick, ad_kickr, ad_clientkick, ad_clientkickr We take numeric values of permissions: ACCESSLEVEL_RESTART: 4 ACCESSLEVEL_MAPCHANGE: 2 ACCESSLEVEL_KICK: 32 and add them toghether: 4 + 2 + 32 = 38 Then we create new entry in admins.ini file: login=chris123 password=mySuperSecretPassw0rd! rights=38","title":"Combining permissions"},{"location":"features/server-admin/accounts-and-permissions/#managing-server-using-admin-account","text":"","title":"Managing server using admin account"},{"location":"features/server-admin/accounts-and-permissions/#logging-in","text":"Connect to the server with your game client, by joining to the game as regular player. Then open your game console (use tilde '~' on your keyboard) and type the following command: ad_login <login> <password> for example: ad_login chris123 mySuperSecretPassw0rd! Based on validity of provided credentials, you will receive one of two possible messages: \"Admin System> You have been authed as admin\" \"USAGE: ad_login - wrong login or password. Please try again.\" Once you've successfully authenticated yourself, you will remain logged-in until you disconnect from the server.","title":"Logging-in"},{"location":"features/server-admin/accounts-and-permissions/#issuing-commands","text":"Once you have successfully logged-in to your admin account, you can start issuing commands. All server admin commands start with ad_ prefix. Open your game console during gameplay and simply type a command, for example: ad_status . You will see result of executing the command in your console. If you are not logged-in to your admin account or don't have enough permissions, you will receive appropriate information.","title":"Issuing commands"},{"location":"features/server-admin/accounts-and-permissions/#server-audit","text":"Sometimes you want to make an audit and investigate who issued what commands and from which admin account. It is possible to do this by configuring your server to include such information in server logs. You have to add +set developer 2 to your server command-line startup script. Note There can be a difference in what information is logged based on OS (Windows vs Linux).","title":"Server audit"},{"location":"features/server-admin/anti-norecoil/","text":"NoRecoil cheat disables weapon kick/recoil when shooting. It gives huge advantage to players who use spraying weapons like Thompson etc. Anti-NoRecoil tries to detect cheaters with recoil removed. It does that server-side (which means cheaters can't bypass it) and then it applies recoil server-side for those players. However, server-side recoil emulation adds significant server load and detection is still not perfect and can cause false-positives, meaning that some players will be falsely marked as cheaters and will have server-side recoil added on top of the one their game client already adds. You can test anti-norecoil feature by using sv_recoilemulation cvar: set sv_recoilemulation <0-1>","title":"Anti NoRecoil"},{"location":"features/server-admin/anti-packet-flood/","text":"It's recommended to have this protection turned on, because it protects your server against flood attacks. Keep in mind that this protection won't protect you against DDoS attacks with very high network traffic, but it can significantly reduce other types of attacks performed by less experienced people. You can control this protection with sv_packetantiflood cvar: sv_packetantiflood <0-1> By default, it's turned on (set to 1). You may want to turn it off, when server administration applications (CI, Foresight, Scapp etc.) are running, because the Anti Packet Flood System may block them. If you use tools that work by sending commands to your server via RCon protocol, it's recommended to use sv_remotetoolip cvar. It's used to set IP address from which your remote server monitoring tool (like CI, ForeSight or Scapp) connects to server. This IP will be excluded from list of potential flooders. set sv_remotetoolip <ip> for example: set sv_remotetoolip 127.0.0.1 If you use GsProtector, which fulfills the task of packet flood protection, it is recommended to turn it off in order to not double the protection as it may block all packets, randomly drop players and cause stability issues or player connection issues. Anti Packet Flood comes with two additional cvars that help to fine tune the behavior: sv_packetflooddelay sv_packetfiltertime sv_packetflooddelay \u00b6 sv_packetflooddelay cvar is used to set the allowed time delay between two incoming packets from the same IP address. When delay between two packets is lower than this cvars value, they will be flagged as flood and dropped by the patch before they reach the engine. The value is in milliseconds and you can set it as follows: sv_packetflooddelay <0-65000> By default, it's set to 50 milliseconds. You shouldn't set the value higher than 500ms, because this may block packets of legit connected players, and you may have problems with your server not showing on game server browsers or have server administration applications (like CI, Foresight, Scapp etc.) kick random players from server. sv_packetfiltertime \u00b6 sv_packetfiltertime cvar is used as throttle time window. When Anti Packet Flood System detects, that 5 continuously incoming packets arrived to the server faster than packet time delay configured by sv_packetflooddelay cvar, it will turn on time throttle window. From this point on, it will drop all incoming packets for specified amount of milliseconds. You can set the throttle window in milliseconds as follows: set sv_packetfiltertime <0-65000> By default it's set to 2000 (ms). Value of this cvar shouldn't be lower than 100ms, because Anti Packet Flood System will drop incoming packets for this amount of time, which may be insufficient to protect the server from the packets flood. Note Packet Time Throttle Window will be only used when IP Hash Table will fail to initialize.","title":"Anti Packet Flood"},{"location":"features/server-admin/anti-packet-flood/#sv_packetflooddelay","text":"sv_packetflooddelay cvar is used to set the allowed time delay between two incoming packets from the same IP address. When delay between two packets is lower than this cvars value, they will be flagged as flood and dropped by the patch before they reach the engine. The value is in milliseconds and you can set it as follows: sv_packetflooddelay <0-65000> By default, it's set to 50 milliseconds. You shouldn't set the value higher than 500ms, because this may block packets of legit connected players, and you may have problems with your server not showing on game server browsers or have server administration applications (like CI, Foresight, Scapp etc.) kick random players from server.","title":"sv_packetflooddelay"},{"location":"features/server-admin/anti-packet-flood/#sv_packetfiltertime","text":"sv_packetfiltertime cvar is used as throttle time window. When Anti Packet Flood System detects, that 5 continuously incoming packets arrived to the server faster than packet time delay configured by sv_packetflooddelay cvar, it will turn on time throttle window. From this point on, it will drop all incoming packets for specified amount of milliseconds. You can set the throttle window in milliseconds as follows: set sv_packetfiltertime <0-65000> By default it's set to 2000 (ms). Value of this cvar shouldn't be lower than 100ms, because Anti Packet Flood System will drop incoming packets for this amount of time, which may be insufficient to protect the server from the packets flood. Note Packet Time Throttle Window will be only used when IP Hash Table will fail to initialize.","title":"sv_packetfiltertime"},{"location":"features/server-admin/anti-stwh/","text":"Some cheats make it possible to shoot and kill players through solid walls. Reborn patch introduced fix that detects bullets going through walls and blocking them, by setting their damage to 0. This fix is enabled by default, however it may cause false-positives, especially for players that often use clipping as their gameplay mechanic. It's controlled by sv_antistwh cvar: set sv_antistwh <0-1> Disabling this protection can be important for those who play clan wars where clipping is considered a part of important tactic. However, most players will never notice that this protection is enabled, so think well before turning it off.","title":"Anti STWH"},{"location":"features/server-admin/anti-wallhack/","text":"Reborn's Anti-Wallhack feature prevents cheaters from using wallhack cheats. It's implemented fully server-side, which means that cheaters can't circumvent it the same way as traditional client-side anticheat protections. However, it's not perfect and it adds significant computation load to server. It also causes player flickering (player model blinking, showing/hiding) when players go behind a cover (such as walls). You can try different anti-wallhack modes by setting sv_antiwh cvar on your server: set sv_antiwh <0-6> In modes 1, 2 and 3, there is additional cvar sv_antiwhskipping that is used to define a player's ping above which anti-wallhack skips checks for particular player. By default it's set to 400 . set sv_antiwhskipping <0-999> In practice it means that players with ping higher than defined by this cvar will be excluded from anti-wallhack system. Players with high ping suffer from heavy flickering, and this cvar can help those players, but it may mean that some cheaters will get excluded from anti-wallhack protection.","title":"Anti Wallhack"},{"location":"features/server-admin/automatic-updates/","text":"Reborn patch comes with auto-update functionality. This way your game server will update to the latest patch version without the need of stopping the server and uploading new files by hand to your game hosting provider. There are two cvars that control auto-update: sv_updatedelay sv_updatetest sv_updatedelay \u00b6 sv_updatedelay cvar is used to specify for how long will your server wait until next update check. The value is specified in hours and you can set it as follows: set sv_updatedelay <1-65000> By default it's set to 12 hours, so Reborn-powered server will check for new patch update every 12 hours. To disable auto-update, you can set it to a very high value, but it's not recommended, because you may miss important security or stability updates and bug fixes. Server administrators shouldn't also set it to very low values, because server might start to check for new updates too often which may lead to higher server pings and bandwidth consumption. sv_updatetest \u00b6 Reborn patch is released in two channels: stable release channel test release channel You might be familiar with this concept, because many web browsers use similar approach. sv_updatetest cvar is used to switch between Stable Release Channel and Test Release Channel. sv_updatetest <0-1> By default, it's set to 0. When it's set to 1, updates will switch to the Test Release Channel and will update Reborn patch to test/experimental patch releases, that are not tested and not confirmed to be stable. If server administrator decides to use Test Release Channel, it is recommended to set this cvar from command line, by editing executable shortcut (Windows) or startup script (Windows/Linux) and adding following line: +seta sv_updatetest 1","title":"Automatic updates"},{"location":"features/server-admin/automatic-updates/#sv_updatedelay","text":"sv_updatedelay cvar is used to specify for how long will your server wait until next update check. The value is specified in hours and you can set it as follows: set sv_updatedelay <1-65000> By default it's set to 12 hours, so Reborn-powered server will check for new patch update every 12 hours. To disable auto-update, you can set it to a very high value, but it's not recommended, because you may miss important security or stability updates and bug fixes. Server administrators shouldn't also set it to very low values, because server might start to check for new updates too often which may lead to higher server pings and bandwidth consumption.","title":"sv_updatedelay"},{"location":"features/server-admin/automatic-updates/#sv_updatetest","text":"Reborn patch is released in two channels: stable release channel test release channel You might be familiar with this concept, because many web browsers use similar approach. sv_updatetest cvar is used to switch between Stable Release Channel and Test Release Channel. sv_updatetest <0-1> By default, it's set to 0. When it's set to 1, updates will switch to the Test Release Channel and will update Reborn patch to test/experimental patch releases, that are not tested and not confirmed to be stable. If server administrator decides to use Test Release Channel, it is recommended to set this cvar from command line, by editing executable shortcut (Windows) or startup script (Windows/Linux) and adding following line: +seta sv_updatetest 1","title":"sv_updatetest"},{"location":"features/server-admin/banning-kicking-players/","text":"IP Banning \u00b6 Banning players by their public IP is controlled with following commands: banip , banipr banid , banidr unbanip listips Hint All listed commands work via RCon. They can be used by admin accounts, by prefixing them with ad_ keyword. See Admin accounts and permissions for more information. Banned IPs are stored in ipfilter.cfg file that can be edited by hand with text editor. Each IP should be added in a new line. Line comments are supported, and work by adding double slashes in front of the line that should be commented out. IP banning supports masks for banning IP ranges. Star symbol (*) is used as a mask. The mask itself can be placed in every of 4 IP segments separated by dots. Below is an example of ipfilter.cfg file: 192.168.0.1 192.*.0.1 192.*.0.* // bans every IP (no one will be able to connect to the server, even host) *.*.*.* *.168.*.* // and so on banip / banipr \u00b6 banip command bans given IP from connecting to the server. You can use masks to ban ranges of IPs. Usage: banip <ip-mask> for example: banip 10.*.40.15 banipr works the same as banip command, but it allows you to give reason of ban as a second argument: banipr <ip-mask> <reason> for example: banipr 10.*.40.15 \"offending server admin\" It will show the reason of the ban both to players on the server, and to banned player upon disconnection. banid / banidr \u00b6 Sometimes you may be in a hurry, or have a hard time typing complicated IP inside console to ban someone. This command bans IP of player with given ID/game slot (clientnum). You can check player's clientnum with status . Usage: banid <clientnum #> for example: banid 10 banidr command is similar, but it allows you to give reason of ban as a second argument. Usage: banidr <clientnum #> <reason> for example: banid 10 \"offending server admin\" It will show the reason of the ban both to players on the server, and to banned player upon disconnection. unbanip \u00b6 unbanip command removes banned IP from list of banned IPs and re-initializes the ban-list. Players with IPs that were banned will be able to join the server again. Usage: unbanip <ip-mask> for example: unbanip 10.*.40.15 Important The command will look for exactly-matching entry in ipfilter.cfg file. It means, that it will not scan inside IP ranges for given IP. listips \u00b6 listips command lists all banned IPs. It supports paging, which means that it splits all banned IPs into smaller groups, which allows you to view them without scrolling inside game console. Usage: listips <page number #> for example: listips 3 There are 20 pages maximum, you can choose between page 1-20. Name Banning \u00b6 Banning player names is controlled with following commands: banname unbanname listnames Hint All listed commands work via RCon. They can be used by admin accounts, by prefixing them with ad_ keyword. See Admin accounts and permissions for more information. Players with banned names will not be able to connect to the server. Banned names are stored in namefilter.cfg file that can be edited by hand with text editor. Each name should be added in a new line. Line comments are supported, and work by adding double slashes in front of the line that should be commented out. It is possible to ban any occurrence of given word in players names. In order to do so, you have to add ~any selector after banned name (separated by single <space> character). Below is an example of namefilter.cfg file: a55 // Line below will ban all names containing this word (Badass, Classic Killer, assasin etc.) ass ~any puta puta madre banname \u00b6 banname command bans the given name. Players with banned names will not be able to join the server unless they change their name. You can use an additional parameter any (by default set to 0) by setting it to 1, to ban any occurrence of the given word in players name. Usage: banname <name> [any=0] for example: banname chris123 or banname clos 1 to ban names that contain word clos in them, eg.: en clos ure unbanname \u00b6 unbanname command removes the name from list of banned names. Players with that name (or word in the name) will be able to connect to the server again. Usage: unbanname <name> for example: unbanname chris123 listnames \u00b6 listnames command lists banned names. ~any tag next to the word means that all names, containing this word, are banned from the server. It supports paging, which means that it splits all banned names into smaller groups, which allows you to view them without scrolling inside game console. Usage: listnames <page number #> for example: listnames 3 There are 20 pages maximum, you can choose between page 1-20. Kicking players from server \u00b6 Sometimes you do not want to ban someone immediately, but rather kick them from the server and make them rethink their actions or behavior. Standard MoH:AA server gives you such possibility with commands: kick clientkick When you use them on a player, other players on the server see generic message: \"Player X has left the battle\". However, you may want to specifically point out that someone was deliberately kicked out from the server, which is different from leaving the server willingly. This is why Reborn patch adds two new commands: kickr clientkickr which let you kick players with providing a reason of such action. kickr \u00b6 kickr command kicks player with given name from the server. Both, players on the server, and kicked player will be provided with the reason of the kick. Usage: kickr <name> <reason> for example: kickr chris123 \"breaking server rules\" clientkickr \u00b6 clientkickr command kicks player with given ID/game slot (clientnum). You can check player's clientnum with status command. The reason of the kick will be displayed both to players on the server and to kicked player. Usage: clientkickr <clientnum #> <reason> for example: clientkickr 5 \"breaking server rules\"","title":"Banning and kicking players"},{"location":"features/server-admin/banning-kicking-players/#ip-banning","text":"Banning players by their public IP is controlled with following commands: banip , banipr banid , banidr unbanip listips Hint All listed commands work via RCon. They can be used by admin accounts, by prefixing them with ad_ keyword. See Admin accounts and permissions for more information. Banned IPs are stored in ipfilter.cfg file that can be edited by hand with text editor. Each IP should be added in a new line. Line comments are supported, and work by adding double slashes in front of the line that should be commented out. IP banning supports masks for banning IP ranges. Star symbol (*) is used as a mask. The mask itself can be placed in every of 4 IP segments separated by dots. Below is an example of ipfilter.cfg file: 192.168.0.1 192.*.0.1 192.*.0.* // bans every IP (no one will be able to connect to the server, even host) *.*.*.* *.168.*.* // and so on","title":"IP Banning"},{"location":"features/server-admin/banning-kicking-players/#banip-banipr","text":"banip command bans given IP from connecting to the server. You can use masks to ban ranges of IPs. Usage: banip <ip-mask> for example: banip 10.*.40.15 banipr works the same as banip command, but it allows you to give reason of ban as a second argument: banipr <ip-mask> <reason> for example: banipr 10.*.40.15 \"offending server admin\" It will show the reason of the ban both to players on the server, and to banned player upon disconnection.","title":" banip / banipr"},{"location":"features/server-admin/banning-kicking-players/#banid-banidr","text":"Sometimes you may be in a hurry, or have a hard time typing complicated IP inside console to ban someone. This command bans IP of player with given ID/game slot (clientnum). You can check player's clientnum with status . Usage: banid <clientnum #> for example: banid 10 banidr command is similar, but it allows you to give reason of ban as a second argument. Usage: banidr <clientnum #> <reason> for example: banid 10 \"offending server admin\" It will show the reason of the ban both to players on the server, and to banned player upon disconnection.","title":" banid / banidr"},{"location":"features/server-admin/banning-kicking-players/#unbanip","text":"unbanip command removes banned IP from list of banned IPs and re-initializes the ban-list. Players with IPs that were banned will be able to join the server again. Usage: unbanip <ip-mask> for example: unbanip 10.*.40.15 Important The command will look for exactly-matching entry in ipfilter.cfg file. It means, that it will not scan inside IP ranges for given IP.","title":" unbanip"},{"location":"features/server-admin/banning-kicking-players/#listips","text":"listips command lists all banned IPs. It supports paging, which means that it splits all banned IPs into smaller groups, which allows you to view them without scrolling inside game console. Usage: listips <page number #> for example: listips 3 There are 20 pages maximum, you can choose between page 1-20.","title":" listips"},{"location":"features/server-admin/banning-kicking-players/#name-banning","text":"Banning player names is controlled with following commands: banname unbanname listnames Hint All listed commands work via RCon. They can be used by admin accounts, by prefixing them with ad_ keyword. See Admin accounts and permissions for more information. Players with banned names will not be able to connect to the server. Banned names are stored in namefilter.cfg file that can be edited by hand with text editor. Each name should be added in a new line. Line comments are supported, and work by adding double slashes in front of the line that should be commented out. It is possible to ban any occurrence of given word in players names. In order to do so, you have to add ~any selector after banned name (separated by single <space> character). Below is an example of namefilter.cfg file: a55 // Line below will ban all names containing this word (Badass, Classic Killer, assasin etc.) ass ~any puta puta madre","title":"Name Banning"},{"location":"features/server-admin/banning-kicking-players/#banname","text":"banname command bans the given name. Players with banned names will not be able to join the server unless they change their name. You can use an additional parameter any (by default set to 0) by setting it to 1, to ban any occurrence of the given word in players name. Usage: banname <name> [any=0] for example: banname chris123 or banname clos 1 to ban names that contain word clos in them, eg.: en clos ure","title":" banname"},{"location":"features/server-admin/banning-kicking-players/#unbanname","text":"unbanname command removes the name from list of banned names. Players with that name (or word in the name) will be able to connect to the server again. Usage: unbanname <name> for example: unbanname chris123","title":" unbanname"},{"location":"features/server-admin/banning-kicking-players/#listnames","text":"listnames command lists banned names. ~any tag next to the word means that all names, containing this word, are banned from the server. It supports paging, which means that it splits all banned names into smaller groups, which allows you to view them without scrolling inside game console. Usage: listnames <page number #> for example: listnames 3 There are 20 pages maximum, you can choose between page 1-20.","title":" listnames"},{"location":"features/server-admin/banning-kicking-players/#kicking-players-from-server","text":"Sometimes you do not want to ban someone immediately, but rather kick them from the server and make them rethink their actions or behavior. Standard MoH:AA server gives you such possibility with commands: kick clientkick When you use them on a player, other players on the server see generic message: \"Player X has left the battle\". However, you may want to specifically point out that someone was deliberately kicked out from the server, which is different from leaving the server willingly. This is why Reborn patch adds two new commands: kickr clientkickr which let you kick players with providing a reason of such action.","title":"Kicking players from server"},{"location":"features/server-admin/banning-kicking-players/#kickr","text":"kickr command kicks player with given name from the server. Both, players on the server, and kicked player will be provided with the reason of the kick. Usage: kickr <name> <reason> for example: kickr chris123 \"breaking server rules\"","title":" kickr"},{"location":"features/server-admin/banning-kicking-players/#clientkickr","text":"clientkickr command kicks player with given ID/game slot (clientnum). You can check player's clientnum with status command. The reason of the kick will be displayed both to players on the server and to kicked player. Usage: clientkickr <clientnum #> <reason> for example: clientkickr 5 \"breaking server rules\"","title":" clientkickr"},{"location":"features/server-admin/chat-management/","text":"Chat filtering \u00b6 Sometimes you may want to keep game chat free from mean curse words in order to make your server friendly to younger players. Chat filtering lets you ban certain bad words from being used in public game chat. You can also use it to ban words that are used to describe places on the game map. This way it will be harder for spectators to spoil the fun for others. Chat filters are controlled with following commands: chatfilteradd chatfilterremove listchatfilter Hint All listed commands work via RCon. They can be used by admin accounts, by prefixing them with ad_ keyword. See Admin accounts and permissions for more information. Filtered words are stored in chatfilter.cfg file that can be edited by hand with text editor. Each word should be added in a new line. Line comments are supported, and work by adding double slashes in front of the line that should be commented out. Below is an example of chatfilter.cfg file: piss piss off pissoff // comment shit wank bollocks rush B Note Only basic words are supported in current version, so wildcards do not work. You will need to add the different versions of words you wish to block as new entries. If a player uses a filtered word, they will be sent a message in game to warn them. The message is blocked and not displayed on the screen. Users are given (by default) 3 chances before being kicked from the server for using bad words. g_badchatlimit cvar \u00b6 The default limit of warnings that player can receive before being kicked is configurable with g_badchatlimit cvar. Setting this cvar to high numbers is not recommended because it will make chat filters useless. Don't set g_badchatlimit to negative numbers, as this may lead to undefined patch behavior. When g_badchatlimit is set to 0, player that says a bad word will be kicked immediately, without any warning. chatfilteradd \u00b6 chatfilteradd command adds the given word to the list of chat filtered words. Usage: chatfilteradd <word> for example: chatfilteradd bollocks chatfilterremove \u00b6 chatfilterremove command removes the word from chat filtered words list. Players will be able to use that word again, without being punished. Usage: chatfilterremove <word> for example: chatfilterremove bollocks listchatfilter \u00b6 listchatfilter command lists all words that are filtered from the chat. It supports paging, which means that it splits all filtered words into smaller groups, which allows you to view them without scrolling inside game console. Usage: listchatfilter <page number #> for example: listchatfilter 3 There are 20 pages maximum, you can choose between page 1-20. Disabling chat \u00b6 It is possible to disable game chat entirely. This may be useful, when you do not have time and resources for proper chat administration, or when you simply prefer more focused gameplay, and you consider game chat to be a distraction. You may also wish to disable only voice taunts, which can be annoying when players spam them. You can disable chat globally with following cvars: sv_disablechat sv_disabletaunt or individually for selected players with following commands: dischat distaunt sv_disablechat cvar \u00b6 When this cvar is set to 1, server's chat will be disabled and players won't be able to send messages at all. This includes global/public chat, team chat, and private chat. In-game messages about kills and deaths will still be visible. sv_disabletaunt cvar \u00b6 This cvar disables taunts for all players on a server, when set to 1. You can disable it by setting it back to 0. dischat \u00b6 dischat command disables all chat abilities for player with given ID/game slot (clientnum). You can check player's clientnum with status command. If the command is used on player with chat already disabled, it will re-enable it. Usage: dischat <clientnum #> for example: dischat 5 distaunt \u00b6 distaunt command disables all taunt abilities for player with given ID/game slot (clientnum). You can check player's clientnum with status command. If the command is used on player with taunts already disabled, it will re-enable it them. Usage: distaunt <clientnum #> for example: distaunt 5","title":"Chat management"},{"location":"features/server-admin/chat-management/#chat-filtering","text":"Sometimes you may want to keep game chat free from mean curse words in order to make your server friendly to younger players. Chat filtering lets you ban certain bad words from being used in public game chat. You can also use it to ban words that are used to describe places on the game map. This way it will be harder for spectators to spoil the fun for others. Chat filters are controlled with following commands: chatfilteradd chatfilterremove listchatfilter Hint All listed commands work via RCon. They can be used by admin accounts, by prefixing them with ad_ keyword. See Admin accounts and permissions for more information. Filtered words are stored in chatfilter.cfg file that can be edited by hand with text editor. Each word should be added in a new line. Line comments are supported, and work by adding double slashes in front of the line that should be commented out. Below is an example of chatfilter.cfg file: piss piss off pissoff // comment shit wank bollocks rush B Note Only basic words are supported in current version, so wildcards do not work. You will need to add the different versions of words you wish to block as new entries. If a player uses a filtered word, they will be sent a message in game to warn them. The message is blocked and not displayed on the screen. Users are given (by default) 3 chances before being kicked from the server for using bad words.","title":"Chat filtering"},{"location":"features/server-admin/chat-management/#g_badchatlimit-cvar","text":"The default limit of warnings that player can receive before being kicked is configurable with g_badchatlimit cvar. Setting this cvar to high numbers is not recommended because it will make chat filters useless. Don't set g_badchatlimit to negative numbers, as this may lead to undefined patch behavior. When g_badchatlimit is set to 0, player that says a bad word will be kicked immediately, without any warning.","title":"g_badchatlimit cvar"},{"location":"features/server-admin/chat-management/#chatfilteradd","text":"chatfilteradd command adds the given word to the list of chat filtered words. Usage: chatfilteradd <word> for example: chatfilteradd bollocks","title":" chatfilteradd"},{"location":"features/server-admin/chat-management/#chatfilterremove","text":"chatfilterremove command removes the word from chat filtered words list. Players will be able to use that word again, without being punished. Usage: chatfilterremove <word> for example: chatfilterremove bollocks","title":" chatfilterremove"},{"location":"features/server-admin/chat-management/#listchatfilter","text":"listchatfilter command lists all words that are filtered from the chat. It supports paging, which means that it splits all filtered words into smaller groups, which allows you to view them without scrolling inside game console. Usage: listchatfilter <page number #> for example: listchatfilter 3 There are 20 pages maximum, you can choose between page 1-20.","title":" listchatfilter"},{"location":"features/server-admin/chat-management/#disabling-chat","text":"It is possible to disable game chat entirely. This may be useful, when you do not have time and resources for proper chat administration, or when you simply prefer more focused gameplay, and you consider game chat to be a distraction. You may also wish to disable only voice taunts, which can be annoying when players spam them. You can disable chat globally with following cvars: sv_disablechat sv_disabletaunt or individually for selected players with following commands: dischat distaunt","title":"Disabling chat"},{"location":"features/server-admin/chat-management/#sv_disablechat-cvar","text":"When this cvar is set to 1, server's chat will be disabled and players won't be able to send messages at all. This includes global/public chat, team chat, and private chat. In-game messages about kills and deaths will still be visible.","title":" sv_disablechat cvar"},{"location":"features/server-admin/chat-management/#sv_disabletaunt-cvar","text":"This cvar disables taunts for all players on a server, when set to 1. You can disable it by setting it back to 0.","title":" sv_disabletaunt cvar"},{"location":"features/server-admin/chat-management/#dischat","text":"dischat command disables all chat abilities for player with given ID/game slot (clientnum). You can check player's clientnum with status command. If the command is used on player with chat already disabled, it will re-enable it. Usage: dischat <clientnum #> for example: dischat 5","title":" dischat"},{"location":"features/server-admin/chat-management/#distaunt","text":"distaunt command disables all taunt abilities for player with given ID/game slot (clientnum). You can check player's clientnum with status command. If the command is used on player with taunts already disabled, it will re-enable it them. Usage: distaunt <clientnum #> for example: distaunt 5","title":" distaunt"},{"location":"features/server-admin/connections-limiter/","text":"You can limit how many players can connect to your server from the same IP address. This feature helps to protect your server against fake players. You can control the limit with sv_maxconnperip cvar. set sv_maxconnperip <0-100> To turn off the protection, set this cvar to -1. If you set it to 0, all connections will be rejected. When more players with same IP address will try to connect to the server, they will be rejected. Note Maximum value is 100, but patch supports only 64 players, so real limit is from 0 to 64.","title":"Connections Limiter"},{"location":"features/server-admin/high-ping-autokick/","text":"Players with high ping can ruin fun for others and can cause server to lag. You can enable autokick feature that will kick players that hit certain ping level, by setting sv_kickping cvar: sv_kickping <0-999> By default this feature is enabled and set to 500 ping. To disable it, you need to set it to 0.","title":"High Ping Autokick"},{"location":"features/server-admin/player-voting/","text":"Player voting \u00b6 MoH:AA/SH/BT is known to have broken voting system. It's rarely used by server admins and players. Reborn introduces new, upgraded vote system, that server admins and players can use to build servers that take players will into consideration. As server administrator, there are few cvars and configuration files that let you control new voting mechanism. g_allowvote \u00b6 g_allowvote cvar is used to enable or disable voting on server. set g_allowvote <0-1> g_votetimeout \u00b6 g_votetimeout cvar sets vote expiration time. Time is counted in minutes. After this time, vote will expire and server will evaluate Yes and No votes and make a decision whether vote has passed or not. If you want to set vote expire time to less than 1 minute, type 0.x, where x is a number. set g_votetimeout <0-5> Examples: 0.5 -> 30 seconds 1.5 -> 90 seconds 0.33 -> around 20 seconds (1/3 of minute) By default it's set to 1 minute. Configuring vote limitations \u00b6 You can control what server commands players can vote for. You may want to let players vote for map changes, but not for map restarts or player kicks/bans, or vice versa. allowedvotes.cfg file stores a list of all commands that players can use when calling a vote with callvote command. Each command entry should appear in a new line. Player will only be able to cast votes with commands from this list. If the list is empty, they won't be able to cast a vote even if voting is enabled on the server. This is an example of such file: restart map If you allow map or gamemap commands to be used in votes, you can additionally control what maps players can vote for when they want to change a map. The list of maps allowed to be used during voting is stored in allowedmaps.cfg file. Each map name should be placed in a new line. Players can see the list of allowed maps by issuing allowedmaps command from game console during gameplay. This is an example of such file: dm/mohdm2 obj/obj_team2","title":"Player voting"},{"location":"features/server-admin/player-voting/#player-voting","text":"MoH:AA/SH/BT is known to have broken voting system. It's rarely used by server admins and players. Reborn introduces new, upgraded vote system, that server admins and players can use to build servers that take players will into consideration. As server administrator, there are few cvars and configuration files that let you control new voting mechanism.","title":"Player voting"},{"location":"features/server-admin/player-voting/#g_allowvote","text":"g_allowvote cvar is used to enable or disable voting on server. set g_allowvote <0-1>","title":"g_allowvote"},{"location":"features/server-admin/player-voting/#g_votetimeout","text":"g_votetimeout cvar sets vote expiration time. Time is counted in minutes. After this time, vote will expire and server will evaluate Yes and No votes and make a decision whether vote has passed or not. If you want to set vote expire time to less than 1 minute, type 0.x, where x is a number. set g_votetimeout <0-5> Examples: 0.5 -> 30 seconds 1.5 -> 90 seconds 0.33 -> around 20 seconds (1/3 of minute) By default it's set to 1 minute.","title":"g_votetimeout"},{"location":"features/server-admin/player-voting/#configuring-vote-limitations","text":"You can control what server commands players can vote for. You may want to let players vote for map changes, but not for map restarts or player kicks/bans, or vice versa. allowedvotes.cfg file stores a list of all commands that players can use when calling a vote with callvote command. Each command entry should appear in a new line. Player will only be able to cast votes with commands from this list. If the list is empty, they won't be able to cast a vote even if voting is enabled on the server. This is an example of such file: restart map If you allow map or gamemap commands to be used in votes, you can additionally control what maps players can vote for when they want to change a map. The list of maps allowed to be used during voting is stored in allowedmaps.cfg file. Each map name should be placed in a new line. Players can see the list of allowed maps by issuing allowedmaps command from game console during gameplay. This is an example of such file: dm/mohdm2 obj/obj_team2","title":"Configuring vote limitations"},{"location":"features/server-admin/protected-player-names/","text":"It is a common problem that malicious players join servers under well-established, well-known names of other respected players and cause harm to their name and reputation. Sometimes they also might pretend to be server admin by stealing their name. With Reborn patch, you can password-protect player names, so only person that knows a password can use given name on your server. This functionality is controlled with following commands: protname unprotname listprotnames Hint All listed commands work via RCon. They can be used by admin accounts, by prefixing them with ad_ keyword. See Admin accounts and permissions for more information. Protected names are stored in protectednamefilter.cfg file that can be edited by hand with text editor. Each protected name should be added in a new line. Line comments are supported, and work by adding double slashes in front of the line that should be commented out. Below is an example of protectednamefilter.cfg file: name=->|ClanTag|<- MyName password=sEcUrE_password name=bestPlayer password=weakOne name=[CLAN]-CL DontStealMyName password=veryhardtoguess // and so on To set the password and join server with protected name, player has to type: setu cl_namepass <password> in the MoHAA game console in order to use protected name. protname \u00b6 protname command protects given name with password. Usage: protname <playername> <password> for example: protname RazoRapiD testpassword unprotname \u00b6 unprotname command removes the name from the list of protected names. From this point, given name can be used by anyone without the need of providing server with password. Usage: unprotname <name> for example: unprotname RazoRapiD listprotnames \u00b6 listprotnames command lists protected names, stored in protectednamefilter.cfg. It supports paging, which means that it splits all protected names into smaller groups, which allows you to view them without scrolling inside game console. Usage: listprotnames <page number #> for example: listprotnames 3 There are 20 pages maximum, you can choose between page 1-20.","title":"Protected player names"},{"location":"features/server-admin/protected-player-names/#protname","text":"protname command protects given name with password. Usage: protname <playername> <password> for example: protname RazoRapiD testpassword","title":" protname"},{"location":"features/server-admin/protected-player-names/#unprotname","text":"unprotname command removes the name from the list of protected names. From this point, given name can be used by anyone without the need of providing server with password. Usage: unprotname <name> for example: unprotname RazoRapiD","title":" unprotname"},{"location":"features/server-admin/protected-player-names/#listprotnames","text":"listprotnames command lists protected names, stored in protectednamefilter.cfg. It supports paging, which means that it splits all protected names into smaller groups, which allows you to view them without scrolling inside game console. Usage: listprotnames <page number #> for example: listprotnames 3 There are 20 pages maximum, you can choose between page 1-20.","title":" listprotnames"},{"location":"features/server-admin/stufftext-bypass-detection/","text":"If your server makes heavy use of stufftext commands and you want to make sure that those commands take effect on players who joined your server, you might want to enable this feature in order to detect players that have their MOHAA game modified to ignore stufftext command. You can enable it as follows: set sv_stufftextdetection <0-1> Players that use stufftext bypass will be kicked from server. Warn Keep in mind that this feature is unstable and it can kick clean players. Info Since many server admins abuse stufftext to hack players and fiddle with player's game config, we may remove this feature in future Reborn patch versions.","title":"Stufftext Bypass Detection"},{"location":"getting-started/host-your-own-server/","text":"This guide will take you through installing the Reborn Patch on your MoH:AA Server and basic configuration. Installation \u00b6 Linux \u00b6 MAKE A BACKUP OF YOU ORIGINAL FILES BEFORE INSTALLING THE PATCH It should be enough to backup following files: mohaa_lnxded fgameded.so But if you are not sure, it's better to make a copy of whole MoH:AA directory. Steps Download latest Linux patch version from HERE and unzip it. Make a backup of your existing server . There are only a couple of files changed by the patch, but if you are not familiar with all the files and folders on your server, this can become confusing, so it's safer to backup everything. Shut down your MOHAA server via your host in the normal way. If your host has an auto restart feature, ensure your server does not restart after you have stopped it. Rename file fgameded.so to fgamededmohaa.so The file will be located in your MOHAA base folder ( for example /opt/MOHAA/ ). Base game folder location may differ depending on what host you are on. Some hosts may provide a HTTP file manager where you can rename the file or use FTP. Copy fgameded.so file that comes with the patch and paste it into your server's MOHAA base folder. Copy all of the rest of files that come with the patch and paste them into your server's MOHAA base folder. Hurray! You are done with installing the patch! It should run without crashing. If it crashes, or doesn't start at all, you probably made a mistake during installation process. Restore your back-up copy and repeat the installations steps, this time with more caution. Note It is important that you keep the original files and just rename them, otherwise the server will not work. Windows \u00b6 MAKE A BACKUP OF YOU ORIGINAL FILES BEFORE INSTALLING THE PATCH It should be enough to backup following files: mohaa_server.exe gamex86.dll But if you are not sure, it's better to make a copy of whole MoH:AA directory. Steps Download latest Windows patch version from HERE and unzip it. Make a backup of your existing server . There are only a couple of files changed by the patch, but if you are not familiar with all the files and folders on your server, this can become confusing, so it's safer to backup everything. Shut down your MOHAA server via your host in the normal way. If your host has an auto restart feature, ensure your server does not restart after you have stopped it. Rename file gamex86.dll to gamex86mohaa.dll The file will be located in your MOHAA main folder ( for example C:/MOHAA/main ). MoHAA main folder location may differ depending on what host you are on. Some hosts may provide a HTTP file manager where you can rename the file or use FTP. Copy gamex86.dll file that comes with the patch and paste it into your server's MoHAA /main/ folder. Copy all of the rest of files that come with the patch and paste them into your server's MoHAA /main/ folder. Hurray! You are done with installing the patch! It should run without crashing. If it crashes, or doesn't start at all, you probably made a mistake during installation process. Restore your back-up copy and repeat the installations steps, this time with more caution. Note It is important that you keep the original files and just rename them, otherwise the server will not work. Docker \u00b6 You can run game server as Docker container. Provided images come with preinstalled Reborn patch and other fixes. They also include all required OS libraries, so it's super easy to run your server with single command. Linux version \u00b6 You can use the following pull command to pull the docker image: docker pull appelpitje/mohaa-server:AA-Reborn To run a container, you can use: docker run -p 12203 :12203/udp -p 12300 :12300/udp appelpitje/mohaa-server:AA-Reborn Windows version \u00b6 You can use the following pull command to pull the docker image: docker pull appelpitje/mohaa-server:AA-Reborn-win32 To run a container, you can use: docker run -p 12203 :12203/udp -p 12300 :12300/udp appelpitje/mohaa-server:AA-Reborn-win32 Troubleshooting \u00b6 If your server crashes after installation, it can be caused by incompatible MoH:AA binary files versions. You may want to replace them with binaries that are known to be working with the patch. You can find them and download from HERE . If you tried compatible binaries and are still experiencing problems - don't hesitate and contact us using any available channel (see: xNULL Community ). Basic configuration \u00b6 This is a template for server configuration file, that should let you set up your Reborn Server from scratch in few seconds. // Server Config File Template // The following 3 commands are usually set on the command line that starts the server // MOHAA_server.exe +set dedicated 2 +set developer 2 +set logfile 2 +exec server.cfg seta dedicated \"2\" // type of server | 0=listen server, 1=LAN server, 2=internet server seta logfile \"2\" // console logging | 0=no log, 1=buffered, 2=continuous seta developer \"2\" // verbose server logging | 0=off, 1=server, 2=server and client seta sv_hostname \"MoH Reborn\" // server name seta sv_maxclients \"32\" // maximum number of players seta sv_maxrate \"25000\" // server-side limit for the client rate seta sv_allowdownload \"0\" // toggles the ability for clients to download files from the server | default=1 seta sv_timeout \"30\" // the amount of time for the server to wait for a client packet before assuming a disconnected state | default=120 seta sv_zombietime \"1\" // the amount of time in minutes before a timed out player is removed from the server | default=2 seta sv_runspeed \"250\" // running speed | default=250 seta sv_walkspeed \"150\" // walking speed | default=150 seta g_allowjointime \"10\" // time in secods the player has to spawn when the round starts in objective mode | default=30 seta g_droppeditemlife \"30\" // weapons/healthpacks life duration in seconds when dropped | default=30 seta g_forcerespawn \"10\" // number of seconds until a player is automatically respawned (if the player doesn't do it by itself) | disabled=0, default=0 seta g_forceteamspectate \"1\" // force team only spectating | default=1 seta g_immediateswitch \"0\" // faster weapon switch (skips the putaway weapon animation) | 1=enabled, 0=disabled, default=0 seta g_inactivekick \"0\" // amount of time in seconds a player can remain inactive before kicked | 0=disabled, default=900 seta g_inactivespectate \"0\" // time in seconds to it takes move an afk player to expectator | 0=disabled, default=60 seta g_teamdamage \"1\" // toggles team damage | default=0 seta g_voicechat \"1\" // toggles character specific pain/death sounds (saves server sound indexes if turned off) | default=1 // Server Passwords seta rconpassword \"\" // password for remote console control of the server seta password \"\" // the serverside password players use to get on the server seta sv_privateclients \"0\" // number of spots, out of sv_maxclients, reserved for players with the server password (sv_privatepassword) | default=0 seta sv_privatepassword \"\" // password for private clients to login with // Voting options seta g_allowvote \"0\" // toggles the voting system | default=1 seta g_votetimeout \"0.5\" // sets the Vote-Expire-Time | 1=1 minute, 0.5=30 seconds // Reborn cvars. More info on mohreborn.com seta g_badchatlimit \"3\" // limit of bad words a player can say on chat before he gets kicked when sv_filterchat is on | default=3 seta g_teambalance \"0\" // forces the \"Auto Join Team\" on new players | default=0 seta sv_antistwh \"1\" // toggles the Anti Shoot Through Walls Hack System | default=1 seta sv_antiwh \"0\" // toggles the Anti Wallhack System (Broken, it is not recommended to turn it on) | 0=disabled, seta sv_banning \"1\" // toggles the Banning System | default=1 seta sv_disablechat \"0\" // disables the server's chat | default=0 seta sv_disabletaunt \"0\" // disables taunts for all players on server | default=0 seta sv_filterchat \"1\" // toggles the Chat Filtering System | default=1 seta sv_kickbadcmd \"0\" // when set to 1, server will kick players using malicious or bad commands | default=1 seta sv_kickping \"0\" // when a player ping exceeds this value, he will get kicked from server | 0=disabled, default=500 seta sv_maxconnperip \"3\" // maximum connections per IP | -1=disabled, default=3 seta sv_protectnames \"1\" // toggles the Name Protection System (protectednamefilter.cfg) | default=1 seta sv_recoilemulation \"0\" // toggles the Anti NoRecoil System | default=0 seta sv_stufftextdetection \"0\" // toggles the Stufftext Bypass Detection System (Broken, it is not recommended to turn it on) | default=1 seta sv_updatedelay \"24\" // ammount of hours to wait until next update check | default=12 // Gametype seta g_gametype \"1\" // 1=Free-For-All, 2=Team-Match, 3=Round-Based-Match, 4=Objective-Match seta timelimit \"0\" // amount of minutes before new map loads or next match begins | 0=no limit seta fraglimit \"50\" // sets the fraglimit | 0=no limit seta roundlimit \"0\" // sets the roundlimit in minutes | 0=no limit seta sv_maplist \"dm/mohdm1 dm/mohdm3 dm/mohdm4 dm/mohdm6\" map \"dm/mohdm6\" // Starts the first map (Stalingrad) Game hosting services \u00b6 If you don't feel like renting a VPS or hosting from home and want to host your own MoH:AA/SH/BT server without a hassle, you can consider using game hosting services offered by various companies. One of our core maintainers - own3mall , owns such a company and can host MoH:AA/SH/BT server for you: WeBeHostiN .","title":"Host your own server"},{"location":"getting-started/host-your-own-server/#installation","text":"","title":"Installation"},{"location":"getting-started/host-your-own-server/#linux","text":"MAKE A BACKUP OF YOU ORIGINAL FILES BEFORE INSTALLING THE PATCH It should be enough to backup following files: mohaa_lnxded fgameded.so But if you are not sure, it's better to make a copy of whole MoH:AA directory. Steps Download latest Linux patch version from HERE and unzip it. Make a backup of your existing server . There are only a couple of files changed by the patch, but if you are not familiar with all the files and folders on your server, this can become confusing, so it's safer to backup everything. Shut down your MOHAA server via your host in the normal way. If your host has an auto restart feature, ensure your server does not restart after you have stopped it. Rename file fgameded.so to fgamededmohaa.so The file will be located in your MOHAA base folder ( for example /opt/MOHAA/ ). Base game folder location may differ depending on what host you are on. Some hosts may provide a HTTP file manager where you can rename the file or use FTP. Copy fgameded.so file that comes with the patch and paste it into your server's MOHAA base folder. Copy all of the rest of files that come with the patch and paste them into your server's MOHAA base folder. Hurray! You are done with installing the patch! It should run without crashing. If it crashes, or doesn't start at all, you probably made a mistake during installation process. Restore your back-up copy and repeat the installations steps, this time with more caution. Note It is important that you keep the original files and just rename them, otherwise the server will not work.","title":"Linux"},{"location":"getting-started/host-your-own-server/#windows","text":"MAKE A BACKUP OF YOU ORIGINAL FILES BEFORE INSTALLING THE PATCH It should be enough to backup following files: mohaa_server.exe gamex86.dll But if you are not sure, it's better to make a copy of whole MoH:AA directory. Steps Download latest Windows patch version from HERE and unzip it. Make a backup of your existing server . There are only a couple of files changed by the patch, but if you are not familiar with all the files and folders on your server, this can become confusing, so it's safer to backup everything. Shut down your MOHAA server via your host in the normal way. If your host has an auto restart feature, ensure your server does not restart after you have stopped it. Rename file gamex86.dll to gamex86mohaa.dll The file will be located in your MOHAA main folder ( for example C:/MOHAA/main ). MoHAA main folder location may differ depending on what host you are on. Some hosts may provide a HTTP file manager where you can rename the file or use FTP. Copy gamex86.dll file that comes with the patch and paste it into your server's MoHAA /main/ folder. Copy all of the rest of files that come with the patch and paste them into your server's MoHAA /main/ folder. Hurray! You are done with installing the patch! It should run without crashing. If it crashes, or doesn't start at all, you probably made a mistake during installation process. Restore your back-up copy and repeat the installations steps, this time with more caution. Note It is important that you keep the original files and just rename them, otherwise the server will not work.","title":"Windows"},{"location":"getting-started/host-your-own-server/#docker","text":"You can run game server as Docker container. Provided images come with preinstalled Reborn patch and other fixes. They also include all required OS libraries, so it's super easy to run your server with single command.","title":"Docker"},{"location":"getting-started/host-your-own-server/#linux-version","text":"You can use the following pull command to pull the docker image: docker pull appelpitje/mohaa-server:AA-Reborn To run a container, you can use: docker run -p 12203 :12203/udp -p 12300 :12300/udp appelpitje/mohaa-server:AA-Reborn","title":"Linux version"},{"location":"getting-started/host-your-own-server/#windows-version","text":"You can use the following pull command to pull the docker image: docker pull appelpitje/mohaa-server:AA-Reborn-win32 To run a container, you can use: docker run -p 12203 :12203/udp -p 12300 :12300/udp appelpitje/mohaa-server:AA-Reborn-win32","title":"Windows version"},{"location":"getting-started/host-your-own-server/#troubleshooting","text":"If your server crashes after installation, it can be caused by incompatible MoH:AA binary files versions. You may want to replace them with binaries that are known to be working with the patch. You can find them and download from HERE . If you tried compatible binaries and are still experiencing problems - don't hesitate and contact us using any available channel (see: xNULL Community ).","title":"Troubleshooting"},{"location":"getting-started/host-your-own-server/#basic-configuration","text":"This is a template for server configuration file, that should let you set up your Reborn Server from scratch in few seconds. // Server Config File Template // The following 3 commands are usually set on the command line that starts the server // MOHAA_server.exe +set dedicated 2 +set developer 2 +set logfile 2 +exec server.cfg seta dedicated \"2\" // type of server | 0=listen server, 1=LAN server, 2=internet server seta logfile \"2\" // console logging | 0=no log, 1=buffered, 2=continuous seta developer \"2\" // verbose server logging | 0=off, 1=server, 2=server and client seta sv_hostname \"MoH Reborn\" // server name seta sv_maxclients \"32\" // maximum number of players seta sv_maxrate \"25000\" // server-side limit for the client rate seta sv_allowdownload \"0\" // toggles the ability for clients to download files from the server | default=1 seta sv_timeout \"30\" // the amount of time for the server to wait for a client packet before assuming a disconnected state | default=120 seta sv_zombietime \"1\" // the amount of time in minutes before a timed out player is removed from the server | default=2 seta sv_runspeed \"250\" // running speed | default=250 seta sv_walkspeed \"150\" // walking speed | default=150 seta g_allowjointime \"10\" // time in secods the player has to spawn when the round starts in objective mode | default=30 seta g_droppeditemlife \"30\" // weapons/healthpacks life duration in seconds when dropped | default=30 seta g_forcerespawn \"10\" // number of seconds until a player is automatically respawned (if the player doesn't do it by itself) | disabled=0, default=0 seta g_forceteamspectate \"1\" // force team only spectating | default=1 seta g_immediateswitch \"0\" // faster weapon switch (skips the putaway weapon animation) | 1=enabled, 0=disabled, default=0 seta g_inactivekick \"0\" // amount of time in seconds a player can remain inactive before kicked | 0=disabled, default=900 seta g_inactivespectate \"0\" // time in seconds to it takes move an afk player to expectator | 0=disabled, default=60 seta g_teamdamage \"1\" // toggles team damage | default=0 seta g_voicechat \"1\" // toggles character specific pain/death sounds (saves server sound indexes if turned off) | default=1 // Server Passwords seta rconpassword \"\" // password for remote console control of the server seta password \"\" // the serverside password players use to get on the server seta sv_privateclients \"0\" // number of spots, out of sv_maxclients, reserved for players with the server password (sv_privatepassword) | default=0 seta sv_privatepassword \"\" // password for private clients to login with // Voting options seta g_allowvote \"0\" // toggles the voting system | default=1 seta g_votetimeout \"0.5\" // sets the Vote-Expire-Time | 1=1 minute, 0.5=30 seconds // Reborn cvars. More info on mohreborn.com seta g_badchatlimit \"3\" // limit of bad words a player can say on chat before he gets kicked when sv_filterchat is on | default=3 seta g_teambalance \"0\" // forces the \"Auto Join Team\" on new players | default=0 seta sv_antistwh \"1\" // toggles the Anti Shoot Through Walls Hack System | default=1 seta sv_antiwh \"0\" // toggles the Anti Wallhack System (Broken, it is not recommended to turn it on) | 0=disabled, seta sv_banning \"1\" // toggles the Banning System | default=1 seta sv_disablechat \"0\" // disables the server's chat | default=0 seta sv_disabletaunt \"0\" // disables taunts for all players on server | default=0 seta sv_filterchat \"1\" // toggles the Chat Filtering System | default=1 seta sv_kickbadcmd \"0\" // when set to 1, server will kick players using malicious or bad commands | default=1 seta sv_kickping \"0\" // when a player ping exceeds this value, he will get kicked from server | 0=disabled, default=500 seta sv_maxconnperip \"3\" // maximum connections per IP | -1=disabled, default=3 seta sv_protectnames \"1\" // toggles the Name Protection System (protectednamefilter.cfg) | default=1 seta sv_recoilemulation \"0\" // toggles the Anti NoRecoil System | default=0 seta sv_stufftextdetection \"0\" // toggles the Stufftext Bypass Detection System (Broken, it is not recommended to turn it on) | default=1 seta sv_updatedelay \"24\" // ammount of hours to wait until next update check | default=12 // Gametype seta g_gametype \"1\" // 1=Free-For-All, 2=Team-Match, 3=Round-Based-Match, 4=Objective-Match seta timelimit \"0\" // amount of minutes before new map loads or next match begins | 0=no limit seta fraglimit \"50\" // sets the fraglimit | 0=no limit seta roundlimit \"0\" // sets the roundlimit in minutes | 0=no limit seta sv_maplist \"dm/mohdm1 dm/mohdm3 dm/mohdm4 dm/mohdm6\" map \"dm/mohdm6\" // Starts the first map (Stalingrad)","title":"Basic configuration"},{"location":"getting-started/host-your-own-server/#game-hosting-services","text":"If you don't feel like renting a VPS or hosting from home and want to host your own MoH:AA/SH/BT server without a hassle, you can consider using game hosting services offered by various companies. One of our core maintainers - own3mall , owns such a company and can host MoH:AA/SH/BT server for you: WeBeHostiN .","title":"Game hosting services"},{"location":"getting-started/modding-guides/","text":"Todo This is where we will put guides for modders (creating, testing, installing mods, troubleshooting etc.)","title":"Modding guides"},{"location":"getting-started/play-online/","text":"Effective May 31, 2014, GameSpy will cease providing all hosted services for all games still using GameSpy. If you have any questions about how this impacts your favorite title please contact the game\u2019s publisher for more information. Thanks for a great ride! GameSpy Industries, Inc. in http://www.poweredbygamespy.com/pricing/ It means that after May 31, 2014 - GameSpy masterserver, which kept list of all online MoH servers has been shut down. In-game browser stopped to work and players can't find new servers to play on anymore. xNULL team and community decided to create a replacement for default masterserver and created custom Reborn MasterServer that supports MoH:AA/SH/BT and GameSpy protocol in order to save the game we all love so much. Game Launcher \u00b6 The easiest way to play MoH:AA/SH/BT games is to download and install MoH Reborn Game Launcher. This is an open-source software created by us, to make player's lives easier. It will patch your game executables so that they will query Reborn MasterServer instead of original one to get list of all online servers and show them in the in-game server browser. Todo Game Launcher is not ready yet. You can help us develop it by contributing to: MoH Reborn Launcher Game Browser Fixer \u00b6 You can also patch your game executables with Game Browser Fixer, which you can find and read about HERE . This solution works only for Windows users. Alternative solutions \u00b6 If you don't want to install and use Reborn Game Launcher (which we highly recommend), you can still make the in-game server browser work. This will however require a bit more technical knowledge. Manual executables replacement \u00b6 You can replace your game executables with the ones that are already patched. Simply download right bundle, unpack binaries and copy them to your game installation folder. When asked whether you want to overwrite original files, click \"Yes\". MAKE A BACKUP OF YOU ORIGINAL FILES BEFORE INSTALLING THE PATCHED ONES We provide patched binaries for both game clients and game servers. Game servers need to be patched in order to register in xNULL Masterserver and be visible to player in the in-game server browser. MoH:AA 1.11 (compatible with Reborn patch) Game (Windows) + Server (Windows & Linux) MoH:SH 2.15 Game (Windows) + Server (Windows & Linux) Game (Windows) + Server with Daven's fixes (Windows & Linux) MoH:SH Demo Game (Windows) + Server with Daven's fixes (Windows & Linux) MoH:BT 2.30 Game (Windows) + Server (Windows & Linux) Game (Windows) + Server with Daven's fixes (Windows & Linux) MoH:BT 2.40 Game (Windows) + Server with Daven's fixes (Windows & Linux) MoH:BT Demo Game (Windows) + Server with Daven's fixes (Windows & Linux) Hosts redirection \u00b6 You can edit your hosts file on your computer. The file will have priority over your DNS server. We will override master.x-null.net to the xNULL master server. Windows \u00b6 Go to: %SystemRoot%\\system32\\drivers\\etc\\ Open file called hosts in your favourite text editor (Notepad is enough) Add the following line to the bottom of the file: 5.104.78.162 master.gamespy.com Save the file and launch MOHAA, you should now see servers in the serverlist. Linux, MacOS \u00b6 Open the file: /etc/hosts in your favourite text editor Add the following line to the bottom of the file: 5.104.78.162 master.gamespy.com Save the file and launch MOHAA, you should now see servers in the serverlist. Manual executable patching with hex editor \u00b6 Todo Coming soon!","title":"Play online"},{"location":"getting-started/play-online/#game-launcher","text":"The easiest way to play MoH:AA/SH/BT games is to download and install MoH Reborn Game Launcher. This is an open-source software created by us, to make player's lives easier. It will patch your game executables so that they will query Reborn MasterServer instead of original one to get list of all online servers and show them in the in-game server browser. Todo Game Launcher is not ready yet. You can help us develop it by contributing to: MoH Reborn Launcher","title":"Game Launcher"},{"location":"getting-started/play-online/#game-browser-fixer","text":"You can also patch your game executables with Game Browser Fixer, which you can find and read about HERE . This solution works only for Windows users.","title":"Game Browser Fixer"},{"location":"getting-started/play-online/#alternative-solutions","text":"If you don't want to install and use Reborn Game Launcher (which we highly recommend), you can still make the in-game server browser work. This will however require a bit more technical knowledge.","title":"Alternative solutions"},{"location":"getting-started/play-online/#manual-executables-replacement","text":"You can replace your game executables with the ones that are already patched. Simply download right bundle, unpack binaries and copy them to your game installation folder. When asked whether you want to overwrite original files, click \"Yes\". MAKE A BACKUP OF YOU ORIGINAL FILES BEFORE INSTALLING THE PATCHED ONES We provide patched binaries for both game clients and game servers. Game servers need to be patched in order to register in xNULL Masterserver and be visible to player in the in-game server browser. MoH:AA 1.11 (compatible with Reborn patch) Game (Windows) + Server (Windows & Linux) MoH:SH 2.15 Game (Windows) + Server (Windows & Linux) Game (Windows) + Server with Daven's fixes (Windows & Linux) MoH:SH Demo Game (Windows) + Server with Daven's fixes (Windows & Linux) MoH:BT 2.30 Game (Windows) + Server (Windows & Linux) Game (Windows) + Server with Daven's fixes (Windows & Linux) MoH:BT 2.40 Game (Windows) + Server with Daven's fixes (Windows & Linux) MoH:BT Demo Game (Windows) + Server with Daven's fixes (Windows & Linux)","title":"Manual executables replacement"},{"location":"getting-started/play-online/#hosts-redirection","text":"You can edit your hosts file on your computer. The file will have priority over your DNS server. We will override master.x-null.net to the xNULL master server.","title":"Hosts redirection"},{"location":"getting-started/play-online/#windows","text":"Go to: %SystemRoot%\\system32\\drivers\\etc\\ Open file called hosts in your favourite text editor (Notepad is enough) Add the following line to the bottom of the file: 5.104.78.162 master.gamespy.com Save the file and launch MOHAA, you should now see servers in the serverlist.","title":"Windows"},{"location":"getting-started/play-online/#linux-macos","text":"Open the file: /etc/hosts in your favourite text editor Add the following line to the bottom of the file: 5.104.78.162 master.gamespy.com Save the file and launch MOHAA, you should now see servers in the serverlist.","title":"Linux, MacOS"},{"location":"getting-started/play-online/#manual-executable-patching-with-hex-editor","text":"Todo Coming soon!","title":"Manual executable patching with hex editor"},{"location":"getting-started/player-guides/","text":"Todo This is where we will put guides for players (installing mods, game configuration, troubleshooting etc.)","title":"Player guides"},{"location":"getting-started/server-admin-guides/","text":"Todo This is where we will put guides for server admins (installing mods, server configuration, troubleshooting etc.)","title":"Server Admin guides"}]}